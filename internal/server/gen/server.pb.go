// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package hashicorp_waypoint

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Supported component types, the values here MUST match the enum values
// in the Go sdk/component package exactly. A test in internal/server
// validates this.
type Component_Type int32

const (
	Component_UNKNOWN  Component_Type = 0
	Component_BUILDER  Component_Type = 1
	Component_REGISTRY Component_Type = 2
)

var Component_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "BUILDER",
	2: "REGISTRY",
}

var Component_Type_value = map[string]int32{
	"UNKNOWN":  0,
	"BUILDER":  1,
	"REGISTRY": 2,
}

func (x Component_Type) String() string {
	return proto.EnumName(Component_Type_name, int32(x))
}

func (Component_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0, 0}
}

type Status_State int32

const (
	Status_UNKNOWN Status_State = 0
	Status_RUNNING Status_State = 1
	Status_SUCCESS Status_State = 2
	Status_ERROR   Status_State = 3
)

var Status_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "RUNNING",
	2: "SUCCESS",
	3: "ERROR",
}

var Status_State_value = map[string]int32{
	"UNKNOWN": 0,
	"RUNNING": 1,
	"SUCCESS": 2,
	"ERROR":   3,
}

func (x Status_State) String() string {
	return proto.EnumName(Status_State_name, int32(x))
}

func (Status_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1, 0}
}

type ListDeploymentsRequest_Order int32

const (
	ListDeploymentsRequest_UNSET         ListDeploymentsRequest_Order = 0
	ListDeploymentsRequest_START_TIME    ListDeploymentsRequest_Order = 1
	ListDeploymentsRequest_COMPLETE_TIME ListDeploymentsRequest_Order = 2
)

var ListDeploymentsRequest_Order_name = map[int32]string{
	0: "UNSET",
	1: "START_TIME",
	2: "COMPLETE_TIME",
}

var ListDeploymentsRequest_Order_value = map[string]int32{
	"UNSET":         0,
	"START_TIME":    1,
	"COMPLETE_TIME": 2,
}

func (x ListDeploymentsRequest_Order) String() string {
	return proto.EnumName(ListDeploymentsRequest_Order_name, int32(x))
}

func (ListDeploymentsRequest_Order) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15, 0}
}

type Deployment_State int32

const (
	Deployment_UNKNOWN Deployment_State = 0
	Deployment_PENDING Deployment_State = 1
	Deployment_DEPLOY  Deployment_State = 3
	Deployment_DESTROY Deployment_State = 4
)

var Deployment_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "PENDING",
	3: "DEPLOY",
	4: "DESTROY",
}

var Deployment_State_value = map[string]int32{
	"UNKNOWN": 0,
	"PENDING": 1,
	"DEPLOY":  3,
	"DESTROY": 4,
}

func (x Deployment_State) String() string {
	return proto.EnumName(Deployment_State_name, int32(x))
}

func (Deployment_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{17, 0}
}

type ExecStreamResponse_Output_Channel int32

const (
	ExecStreamResponse_Output_UNKNOWN ExecStreamResponse_Output_Channel = 0
	ExecStreamResponse_Output_STDOUT  ExecStreamResponse_Output_Channel = 1
	ExecStreamResponse_Output_STDERR  ExecStreamResponse_Output_Channel = 2
)

var ExecStreamResponse_Output_Channel_name = map[int32]string{
	0: "UNKNOWN",
	1: "STDOUT",
	2: "STDERR",
}

var ExecStreamResponse_Output_Channel_value = map[string]int32{
	"UNKNOWN": 0,
	"STDOUT":  1,
	"STDERR":  2,
}

func (x ExecStreamResponse_Output_Channel) String() string {
	return proto.EnumName(ExecStreamResponse_Output_Channel_name, int32(x))
}

func (ExecStreamResponse_Output_Channel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{24, 1, 0}
}

type EntrypointExecRequest_Output_Channel int32

const (
	EntrypointExecRequest_Output_UNKNOWN EntrypointExecRequest_Output_Channel = 0
	EntrypointExecRequest_Output_STDOUT  EntrypointExecRequest_Output_Channel = 1
	EntrypointExecRequest_Output_STDERR  EntrypointExecRequest_Output_Channel = 2
)

var EntrypointExecRequest_Output_Channel_name = map[int32]string{
	0: "UNKNOWN",
	1: "STDOUT",
	2: "STDERR",
}

var EntrypointExecRequest_Output_Channel_value = map[string]int32{
	"UNKNOWN": 0,
	"STDOUT":  1,
	"STDERR":  2,
}

func (x EntrypointExecRequest_Output_Channel) String() string {
	return proto.EnumName(EntrypointExecRequest_Output_Channel_name, int32(x))
}

func (EntrypointExecRequest_Output_Channel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{29, 2, 0}
}

// Component represents metadata about a component. A component is the
// generic name for a builder, registry, platform, etc.
type Component struct {
	// type of the component
	Type Component_Type `protobuf:"varint,1,opt,name=type,proto3,enum=hashicorp.waypoint.Component_Type" json:"type,omitempty"`
	// name of the component
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Component) Reset()         { *m = Component{} }
func (m *Component) String() string { return proto.CompactTextString(m) }
func (*Component) ProtoMessage()    {}
func (*Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Component.Unmarshal(m, b)
}
func (m *Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Component.Marshal(b, m, deterministic)
}
func (m *Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Component.Merge(m, src)
}
func (m *Component) XXX_Size() int {
	return xxx_messageInfo_Component.Size(m)
}
func (m *Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Component proto.InternalMessageInfo

func (m *Component) GetType() Component_Type {
	if m != nil {
		return m.Type
	}
	return Component_UNKNOWN
}

func (m *Component) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Status represents the status of an async operation.
type Status struct {
	// state is the state of this operation.
	State Status_State `protobuf:"varint,1,opt,name=state,proto3,enum=hashicorp.waypoint.Status_State" json:"state,omitempty"`
	// details may be non-empty to provide human-friendly information
	// about the current status. This may change between status updates
	// for the same state to provide updated details about the state.
	Details string `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	// error is set if the state == ERROR with the error that occurred.
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// start_time is the time the operation was started.
	StartTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// complete_time is the time the operation completed (success or fail).
	CompleteTime         *timestamp.Timestamp `protobuf:"bytes,5,opt,name=complete_time,json=completeTime,proto3" json:"complete_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetState() Status_State {
	if m != nil {
		return m.State
	}
	return Status_UNKNOWN
}

func (m *Status) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Status) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Status) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Status) GetCompleteTime() *timestamp.Timestamp {
	if m != nil {
		return m.CompleteTime
	}
	return nil
}

type StatusFilter struct {
	// Filters are ANDed together.
	Filters              []*StatusFilter_Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StatusFilter) Reset()         { *m = StatusFilter{} }
func (m *StatusFilter) String() string { return proto.CompactTextString(m) }
func (*StatusFilter) ProtoMessage()    {}
func (*StatusFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *StatusFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusFilter.Unmarshal(m, b)
}
func (m *StatusFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusFilter.Marshal(b, m, deterministic)
}
func (m *StatusFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusFilter.Merge(m, src)
}
func (m *StatusFilter) XXX_Size() int {
	return xxx_messageInfo_StatusFilter.Size(m)
}
func (m *StatusFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusFilter.DiscardUnknown(m)
}

var xxx_messageInfo_StatusFilter proto.InternalMessageInfo

func (m *StatusFilter) GetFilters() []*StatusFilter_Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type StatusFilter_Filter struct {
	// Types that are valid to be assigned to Filter:
	//	*StatusFilter_Filter_State
	Filter               isStatusFilter_Filter_Filter `protobuf_oneof:"filter"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *StatusFilter_Filter) Reset()         { *m = StatusFilter_Filter{} }
func (m *StatusFilter_Filter) String() string { return proto.CompactTextString(m) }
func (*StatusFilter_Filter) ProtoMessage()    {}
func (*StatusFilter_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2, 0}
}

func (m *StatusFilter_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusFilter_Filter.Unmarshal(m, b)
}
func (m *StatusFilter_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusFilter_Filter.Marshal(b, m, deterministic)
}
func (m *StatusFilter_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusFilter_Filter.Merge(m, src)
}
func (m *StatusFilter_Filter) XXX_Size() int {
	return xxx_messageInfo_StatusFilter_Filter.Size(m)
}
func (m *StatusFilter_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusFilter_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_StatusFilter_Filter proto.InternalMessageInfo

type isStatusFilter_Filter_Filter interface {
	isStatusFilter_Filter_Filter()
}

type StatusFilter_Filter_State struct {
	State Status_State `protobuf:"varint,2,opt,name=state,proto3,enum=hashicorp.waypoint.Status_State,oneof"`
}

func (*StatusFilter_Filter_State) isStatusFilter_Filter_Filter() {}

func (m *StatusFilter_Filter) GetFilter() isStatusFilter_Filter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *StatusFilter_Filter) GetState() Status_State {
	if x, ok := m.GetFilter().(*StatusFilter_Filter_State); ok {
		return x.State
	}
	return Status_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StatusFilter_Filter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StatusFilter_Filter_State)(nil),
	}
}

type UpsertBuildRequest struct {
	// Build to upsert. If an ID is not set, this will be an insert operation.
	// If the ID is set, that build is updated. It is an error if an update
	// is requested on a non-existent build.
	Build                *Build   `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertBuildRequest) Reset()         { *m = UpsertBuildRequest{} }
func (m *UpsertBuildRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertBuildRequest) ProtoMessage()    {}
func (*UpsertBuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *UpsertBuildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertBuildRequest.Unmarshal(m, b)
}
func (m *UpsertBuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertBuildRequest.Marshal(b, m, deterministic)
}
func (m *UpsertBuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertBuildRequest.Merge(m, src)
}
func (m *UpsertBuildRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertBuildRequest.Size(m)
}
func (m *UpsertBuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertBuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertBuildRequest proto.InternalMessageInfo

func (m *UpsertBuildRequest) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

type UpsertBuildResponse struct {
	Build                *Build   `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertBuildResponse) Reset()         { *m = UpsertBuildResponse{} }
func (m *UpsertBuildResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertBuildResponse) ProtoMessage()    {}
func (*UpsertBuildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{4}
}

func (m *UpsertBuildResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertBuildResponse.Unmarshal(m, b)
}
func (m *UpsertBuildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertBuildResponse.Marshal(b, m, deterministic)
}
func (m *UpsertBuildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertBuildResponse.Merge(m, src)
}
func (m *UpsertBuildResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertBuildResponse.Size(m)
}
func (m *UpsertBuildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertBuildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertBuildResponse proto.InternalMessageInfo

func (m *UpsertBuildResponse) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

type ListBuildsResponse struct {
	// builds is the list of builds.
	Builds               []*Build `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBuildsResponse) Reset()         { *m = ListBuildsResponse{} }
func (m *ListBuildsResponse) String() string { return proto.CompactTextString(m) }
func (*ListBuildsResponse) ProtoMessage()    {}
func (*ListBuildsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5}
}

func (m *ListBuildsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBuildsResponse.Unmarshal(m, b)
}
func (m *ListBuildsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBuildsResponse.Marshal(b, m, deterministic)
}
func (m *ListBuildsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBuildsResponse.Merge(m, src)
}
func (m *ListBuildsResponse) XXX_Size() int {
	return xxx_messageInfo_ListBuildsResponse.Size(m)
}
func (m *ListBuildsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBuildsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBuildsResponse proto.InternalMessageInfo

func (m *ListBuildsResponse) GetBuilds() []*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

// Build represents a process of creating an artifact that can be in any state,
// such as complete. A successful complete build produces an artifact.
type Build struct {
	// id is the unique ID of the build
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// status of the build
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// component is the component that was used for this build
	Component *Component `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	// artifact is the result of the build if the status.state == SUCCESS
	Artifact *Artifact `protobuf:"bytes,4,opt,name=artifact,proto3" json:"artifact,omitempty"`
	// labels are the set of labels that are present on this build.
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{6}
}

func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (m *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(m, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Build) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Build) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Build) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

func (m *Build) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// Artifact is the result of a build or registry. This is the metadata only.
// The binary contents of an artifact are expected to be stored in a registry.
type Artifact struct {
	// artifact is the full artifact encoded directly from the component plugin.
	// The receiving end must have access to the component proto files to
	// know how to decode this.
	Artifact             *any.Any `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{7}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetArtifact() *any.Any {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type UpsertPushedArtifactRequest struct {
	// artifact to upsert. If the id in the artifact is empty, then this
	// will be an insert. Otherwise, this will be an update and if the ID
	// isn't found, it will be an error.
	Artifact             *PushedArtifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpsertPushedArtifactRequest) Reset()         { *m = UpsertPushedArtifactRequest{} }
func (m *UpsertPushedArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertPushedArtifactRequest) ProtoMessage()    {}
func (*UpsertPushedArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{8}
}

func (m *UpsertPushedArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPushedArtifactRequest.Unmarshal(m, b)
}
func (m *UpsertPushedArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPushedArtifactRequest.Marshal(b, m, deterministic)
}
func (m *UpsertPushedArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPushedArtifactRequest.Merge(m, src)
}
func (m *UpsertPushedArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertPushedArtifactRequest.Size(m)
}
func (m *UpsertPushedArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPushedArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPushedArtifactRequest proto.InternalMessageInfo

func (m *UpsertPushedArtifactRequest) GetArtifact() *PushedArtifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type UpsertPushedArtifactResponse struct {
	// resulting push object, you should replace this with what was sent
	// since the update operation may touch up the input data (i.e. update
	// timestamps)
	Artifact             *PushedArtifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpsertPushedArtifactResponse) Reset()         { *m = UpsertPushedArtifactResponse{} }
func (m *UpsertPushedArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertPushedArtifactResponse) ProtoMessage()    {}
func (*UpsertPushedArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{9}
}

func (m *UpsertPushedArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPushedArtifactResponse.Unmarshal(m, b)
}
func (m *UpsertPushedArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPushedArtifactResponse.Marshal(b, m, deterministic)
}
func (m *UpsertPushedArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPushedArtifactResponse.Merge(m, src)
}
func (m *UpsertPushedArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertPushedArtifactResponse.Size(m)
}
func (m *UpsertPushedArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPushedArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPushedArtifactResponse proto.InternalMessageInfo

func (m *UpsertPushedArtifactResponse) GetArtifact() *PushedArtifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type ListPushedArtifactsResponse struct {
	// artifacts is the list of artifacts.
	Artifacts            []*PushedArtifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListPushedArtifactsResponse) Reset()         { *m = ListPushedArtifactsResponse{} }
func (m *ListPushedArtifactsResponse) String() string { return proto.CompactTextString(m) }
func (*ListPushedArtifactsResponse) ProtoMessage()    {}
func (*ListPushedArtifactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{10}
}

func (m *ListPushedArtifactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPushedArtifactsResponse.Unmarshal(m, b)
}
func (m *ListPushedArtifactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPushedArtifactsResponse.Marshal(b, m, deterministic)
}
func (m *ListPushedArtifactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPushedArtifactsResponse.Merge(m, src)
}
func (m *ListPushedArtifactsResponse) XXX_Size() int {
	return xxx_messageInfo_ListPushedArtifactsResponse.Size(m)
}
func (m *ListPushedArtifactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPushedArtifactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPushedArtifactsResponse proto.InternalMessageInfo

func (m *ListPushedArtifactsResponse) GetArtifacts() []*PushedArtifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

type PushedArtifact struct {
	// id is a unique ID for this push
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// status of the push operation
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// component that pushed this artifact
	Component *Component `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	// artifact is the artifact that was a result from the push.
	Artifact *Artifact `protobuf:"bytes,4,opt,name=artifact,proto3" json:"artifact,omitempty"`
	// the id of the build that this pushed artifact was sourced from.
	BuildId string `protobuf:"bytes,5,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	// labels are the set of labels that are present on this build.
	Labels               map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PushedArtifact) Reset()         { *m = PushedArtifact{} }
func (m *PushedArtifact) String() string { return proto.CompactTextString(m) }
func (*PushedArtifact) ProtoMessage()    {}
func (*PushedArtifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{11}
}

func (m *PushedArtifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushedArtifact.Unmarshal(m, b)
}
func (m *PushedArtifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushedArtifact.Marshal(b, m, deterministic)
}
func (m *PushedArtifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushedArtifact.Merge(m, src)
}
func (m *PushedArtifact) XXX_Size() int {
	return xxx_messageInfo_PushedArtifact.Size(m)
}
func (m *PushedArtifact) XXX_DiscardUnknown() {
	xxx_messageInfo_PushedArtifact.DiscardUnknown(m)
}

var xxx_messageInfo_PushedArtifact proto.InternalMessageInfo

func (m *PushedArtifact) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PushedArtifact) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PushedArtifact) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *PushedArtifact) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

func (m *PushedArtifact) GetBuildId() string {
	if m != nil {
		return m.BuildId
	}
	return ""
}

func (m *PushedArtifact) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type GetDeploymentRequest struct {
	// Deployment to return.
	DeploymentId         string   `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeploymentRequest) Reset()         { *m = GetDeploymentRequest{} }
func (m *GetDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeploymentRequest) ProtoMessage()    {}
func (*GetDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12}
}

func (m *GetDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeploymentRequest.Unmarshal(m, b)
}
func (m *GetDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *GetDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeploymentRequest.Merge(m, src)
}
func (m *GetDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeploymentRequest.Size(m)
}
func (m *GetDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeploymentRequest proto.InternalMessageInfo

func (m *GetDeploymentRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

type UpsertDeploymentRequest struct {
	// deployment to upsert. If the id in the artifact is empty, then this
	// will be an insert. Otherwise, this will be an update and if the ID
	// isn't found, it will be an error.
	Deployment           *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpsertDeploymentRequest) Reset()         { *m = UpsertDeploymentRequest{} }
func (m *UpsertDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertDeploymentRequest) ProtoMessage()    {}
func (*UpsertDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{13}
}

func (m *UpsertDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertDeploymentRequest.Unmarshal(m, b)
}
func (m *UpsertDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *UpsertDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertDeploymentRequest.Merge(m, src)
}
func (m *UpsertDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertDeploymentRequest.Size(m)
}
func (m *UpsertDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertDeploymentRequest proto.InternalMessageInfo

func (m *UpsertDeploymentRequest) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

type UpsertDeploymentResponse struct {
	// resulting object, you should replace this with what was sent in the request
	// since the update operation may touch up the input data (i.e. update
	// timestamps)
	Deployment           *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpsertDeploymentResponse) Reset()         { *m = UpsertDeploymentResponse{} }
func (m *UpsertDeploymentResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertDeploymentResponse) ProtoMessage()    {}
func (*UpsertDeploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{14}
}

func (m *UpsertDeploymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertDeploymentResponse.Unmarshal(m, b)
}
func (m *UpsertDeploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertDeploymentResponse.Marshal(b, m, deterministic)
}
func (m *UpsertDeploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertDeploymentResponse.Merge(m, src)
}
func (m *UpsertDeploymentResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertDeploymentResponse.Size(m)
}
func (m *UpsertDeploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertDeploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertDeploymentResponse proto.InternalMessageInfo

func (m *UpsertDeploymentResponse) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

type ListDeploymentsRequest struct {
	// The filters to apply to this request. These are ORed, so you should
	// specify multiple filters in the StatusFilter for AND behavior.
	Status []*StatusFilter `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	// Order for the results.
	Order     ListDeploymentsRequest_Order `protobuf:"varint,2,opt,name=order,proto3,enum=hashicorp.waypoint.ListDeploymentsRequest_Order" json:"order,omitempty"`
	OrderDesc bool                         `protobuf:"varint,3,opt,name=order_desc,json=orderDesc,proto3" json:"order_desc,omitempty"`
	// Limit the number of results
	Limit                uint32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeploymentsRequest) Reset()         { *m = ListDeploymentsRequest{} }
func (m *ListDeploymentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeploymentsRequest) ProtoMessage()    {}
func (*ListDeploymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15}
}

func (m *ListDeploymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeploymentsRequest.Unmarshal(m, b)
}
func (m *ListDeploymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeploymentsRequest.Marshal(b, m, deterministic)
}
func (m *ListDeploymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeploymentsRequest.Merge(m, src)
}
func (m *ListDeploymentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeploymentsRequest.Size(m)
}
func (m *ListDeploymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeploymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeploymentsRequest proto.InternalMessageInfo

func (m *ListDeploymentsRequest) GetStatus() []*StatusFilter {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListDeploymentsRequest) GetOrder() ListDeploymentsRequest_Order {
	if m != nil {
		return m.Order
	}
	return ListDeploymentsRequest_UNSET
}

func (m *ListDeploymentsRequest) GetOrderDesc() bool {
	if m != nil {
		return m.OrderDesc
	}
	return false
}

func (m *ListDeploymentsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListDeploymentsResponse struct {
	// deployments is the list of deployments.
	Deployments          []*Deployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListDeploymentsResponse) Reset()         { *m = ListDeploymentsResponse{} }
func (m *ListDeploymentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeploymentsResponse) ProtoMessage()    {}
func (*ListDeploymentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{16}
}

func (m *ListDeploymentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeploymentsResponse.Unmarshal(m, b)
}
func (m *ListDeploymentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeploymentsResponse.Marshal(b, m, deterministic)
}
func (m *ListDeploymentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeploymentsResponse.Merge(m, src)
}
func (m *ListDeploymentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeploymentsResponse.Size(m)
}
func (m *ListDeploymentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeploymentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeploymentsResponse proto.InternalMessageInfo

func (m *ListDeploymentsResponse) GetDeployments() []*Deployment {
	if m != nil {
		return m.Deployments
	}
	return nil
}

type Deployment struct {
	// id is the unique ID for this deployment
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// state is the state of this deployment.
	State Deployment_State `protobuf:"varint,2,opt,name=state,proto3,enum=hashicorp.waypoint.Deployment_State" json:"state,omitempty"`
	// status of the current state of the deployment.
	Status *Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// component that initiated this deployment
	Component *Component `protobuf:"bytes,4,opt,name=component,proto3" json:"component,omitempty"`
	// ID of the PushedArtifact that was deployed.
	ArtifactId string `protobuf:"bytes,5,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	// deployment is the full raw deployment object encoded directly from
	// the plugin. The client must have all the plugins setup to properly
	// decode this.
	Deployment *any.Any `protobuf:"bytes,6,opt,name=deployment,proto3" json:"deployment,omitempty"`
	// labels are the set of labels that are present on this build.
	Labels               map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Deployment) Reset()         { *m = Deployment{} }
func (m *Deployment) String() string { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()    {}
func (*Deployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{17}
}

func (m *Deployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deployment.Unmarshal(m, b)
}
func (m *Deployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deployment.Marshal(b, m, deterministic)
}
func (m *Deployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deployment.Merge(m, src)
}
func (m *Deployment) XXX_Size() int {
	return xxx_messageInfo_Deployment.Size(m)
}
func (m *Deployment) XXX_DiscardUnknown() {
	xxx_messageInfo_Deployment.DiscardUnknown(m)
}

var xxx_messageInfo_Deployment proto.InternalMessageInfo

func (m *Deployment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Deployment) GetState() Deployment_State {
	if m != nil {
		return m.State
	}
	return Deployment_UNKNOWN
}

func (m *Deployment) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Deployment) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Deployment) GetArtifactId() string {
	if m != nil {
		return m.ArtifactId
	}
	return ""
}

func (m *Deployment) GetDeployment() *any.Any {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *Deployment) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type UpsertReleaseRequest struct {
	// release to upsert. If the id in the artifact is empty, then this
	// will be an insert. Otherwise, this will be an update and if the ID
	// isn't found, it will be an error.
	Release              *Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertReleaseRequest) Reset()         { *m = UpsertReleaseRequest{} }
func (m *UpsertReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertReleaseRequest) ProtoMessage()    {}
func (*UpsertReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{18}
}

func (m *UpsertReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertReleaseRequest.Unmarshal(m, b)
}
func (m *UpsertReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertReleaseRequest.Marshal(b, m, deterministic)
}
func (m *UpsertReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertReleaseRequest.Merge(m, src)
}
func (m *UpsertReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertReleaseRequest.Size(m)
}
func (m *UpsertReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertReleaseRequest proto.InternalMessageInfo

func (m *UpsertReleaseRequest) GetRelease() *Release {
	if m != nil {
		return m.Release
	}
	return nil
}

type UpsertReleaseResponse struct {
	// resulting object, you should replace this with what was sent in the request
	// since the update operation may touch up the input data (i.e. update
	// timestamps)
	Release              *Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertReleaseResponse) Reset()         { *m = UpsertReleaseResponse{} }
func (m *UpsertReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertReleaseResponse) ProtoMessage()    {}
func (*UpsertReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{19}
}

func (m *UpsertReleaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertReleaseResponse.Unmarshal(m, b)
}
func (m *UpsertReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertReleaseResponse.Marshal(b, m, deterministic)
}
func (m *UpsertReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertReleaseResponse.Merge(m, src)
}
func (m *UpsertReleaseResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertReleaseResponse.Size(m)
}
func (m *UpsertReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertReleaseResponse proto.InternalMessageInfo

func (m *UpsertReleaseResponse) GetRelease() *Release {
	if m != nil {
		return m.Release
	}
	return nil
}

type Release struct {
	// id is the unique ID for this release.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// status of the release operation.
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// component managing the release process.
	Component *Component `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	// release is the raw release object encoded directly from the plugin.
	Release *any.Any `protobuf:"bytes,4,opt,name=release,proto3" json:"release,omitempty"`
	// split traffic between multiple deployments
	TrafficSplit *Release_Split `protobuf:"bytes,5,opt,name=traffic_split,json=trafficSplit,proto3" json:"traffic_split,omitempty"`
	// labels are the set of labels that are present on this build.
	Labels               map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Release) Reset()         { *m = Release{} }
func (m *Release) String() string { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()    {}
func (*Release) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{20}
}

func (m *Release) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release.Unmarshal(m, b)
}
func (m *Release) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release.Marshal(b, m, deterministic)
}
func (m *Release) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release.Merge(m, src)
}
func (m *Release) XXX_Size() int {
	return xxx_messageInfo_Release.Size(m)
}
func (m *Release) XXX_DiscardUnknown() {
	xxx_messageInfo_Release.DiscardUnknown(m)
}

var xxx_messageInfo_Release proto.InternalMessageInfo

func (m *Release) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Release) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Release) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Release) GetRelease() *any.Any {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *Release) GetTrafficSplit() *Release_Split {
	if m != nil {
		return m.TrafficSplit
	}
	return nil
}

func (m *Release) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type Release_Split struct {
	Targets              []*Release_SplitTarget `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Release_Split) Reset()         { *m = Release_Split{} }
func (m *Release_Split) String() string { return proto.CompactTextString(m) }
func (*Release_Split) ProtoMessage()    {}
func (*Release_Split) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{20, 1}
}

func (m *Release_Split) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release_Split.Unmarshal(m, b)
}
func (m *Release_Split) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release_Split.Marshal(b, m, deterministic)
}
func (m *Release_Split) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release_Split.Merge(m, src)
}
func (m *Release_Split) XXX_Size() int {
	return xxx_messageInfo_Release_Split.Size(m)
}
func (m *Release_Split) XXX_DiscardUnknown() {
	xxx_messageInfo_Release_Split.DiscardUnknown(m)
}

var xxx_messageInfo_Release_Split proto.InternalMessageInfo

func (m *Release_Split) GetTargets() []*Release_SplitTarget {
	if m != nil {
		return m.Targets
	}
	return nil
}

type Release_SplitTarget struct {
	// id the deployment target
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// percentage of traffic
	Percent              int32    `protobuf:"varint,2,opt,name=percent,proto3" json:"percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Release_SplitTarget) Reset()         { *m = Release_SplitTarget{} }
func (m *Release_SplitTarget) String() string { return proto.CompactTextString(m) }
func (*Release_SplitTarget) ProtoMessage()    {}
func (*Release_SplitTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{20, 2}
}

func (m *Release_SplitTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release_SplitTarget.Unmarshal(m, b)
}
func (m *Release_SplitTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release_SplitTarget.Marshal(b, m, deterministic)
}
func (m *Release_SplitTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release_SplitTarget.Merge(m, src)
}
func (m *Release_SplitTarget) XXX_Size() int {
	return xxx_messageInfo_Release_SplitTarget.Size(m)
}
func (m *Release_SplitTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_Release_SplitTarget.DiscardUnknown(m)
}

var xxx_messageInfo_Release_SplitTarget proto.InternalMessageInfo

func (m *Release_SplitTarget) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *Release_SplitTarget) GetPercent() int32 {
	if m != nil {
		return m.Percent
	}
	return 0
}

type GetLogStreamRequest struct {
	// Deployment to request logs for.
	DeploymentId         string   `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLogStreamRequest) Reset()         { *m = GetLogStreamRequest{} }
func (m *GetLogStreamRequest) String() string { return proto.CompactTextString(m) }
func (*GetLogStreamRequest) ProtoMessage()    {}
func (*GetLogStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{21}
}

func (m *GetLogStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogStreamRequest.Unmarshal(m, b)
}
func (m *GetLogStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogStreamRequest.Marshal(b, m, deterministic)
}
func (m *GetLogStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogStreamRequest.Merge(m, src)
}
func (m *GetLogStreamRequest) XXX_Size() int {
	return xxx_messageInfo_GetLogStreamRequest.Size(m)
}
func (m *GetLogStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogStreamRequest proto.InternalMessageInfo

func (m *GetLogStreamRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

type LogBatch struct {
	DeploymentId         string            `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	InstanceId           string            `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Lines                []*LogBatch_Entry `protobuf:"bytes,3,rep,name=lines,proto3" json:"lines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LogBatch) Reset()         { *m = LogBatch{} }
func (m *LogBatch) String() string { return proto.CompactTextString(m) }
func (*LogBatch) ProtoMessage()    {}
func (*LogBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{22}
}

func (m *LogBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogBatch.Unmarshal(m, b)
}
func (m *LogBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogBatch.Marshal(b, m, deterministic)
}
func (m *LogBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogBatch.Merge(m, src)
}
func (m *LogBatch) XXX_Size() int {
	return xxx_messageInfo_LogBatch.Size(m)
}
func (m *LogBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_LogBatch.DiscardUnknown(m)
}

var xxx_messageInfo_LogBatch proto.InternalMessageInfo

func (m *LogBatch) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *LogBatch) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *LogBatch) GetLines() []*LogBatch_Entry {
	if m != nil {
		return m.Lines
	}
	return nil
}

type LogBatch_Entry struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Line                 string               `protobuf:"bytes,2,opt,name=line,proto3" json:"line,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogBatch_Entry) Reset()         { *m = LogBatch_Entry{} }
func (m *LogBatch_Entry) String() string { return proto.CompactTextString(m) }
func (*LogBatch_Entry) ProtoMessage()    {}
func (*LogBatch_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{22, 0}
}

func (m *LogBatch_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogBatch_Entry.Unmarshal(m, b)
}
func (m *LogBatch_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogBatch_Entry.Marshal(b, m, deterministic)
}
func (m *LogBatch_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogBatch_Entry.Merge(m, src)
}
func (m *LogBatch_Entry) XXX_Size() int {
	return xxx_messageInfo_LogBatch_Entry.Size(m)
}
func (m *LogBatch_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogBatch_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_LogBatch_Entry proto.InternalMessageInfo

func (m *LogBatch_Entry) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LogBatch_Entry) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

type ExecStreamRequest struct {
	// Types that are valid to be assigned to Event:
	//	*ExecStreamRequest_Start_
	//	*ExecStreamRequest_Input_
	//	*ExecStreamRequest_Winch
	Event                isExecStreamRequest_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ExecStreamRequest) Reset()         { *m = ExecStreamRequest{} }
func (m *ExecStreamRequest) String() string { return proto.CompactTextString(m) }
func (*ExecStreamRequest) ProtoMessage()    {}
func (*ExecStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{23}
}

func (m *ExecStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamRequest.Unmarshal(m, b)
}
func (m *ExecStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamRequest.Marshal(b, m, deterministic)
}
func (m *ExecStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamRequest.Merge(m, src)
}
func (m *ExecStreamRequest) XXX_Size() int {
	return xxx_messageInfo_ExecStreamRequest.Size(m)
}
func (m *ExecStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamRequest proto.InternalMessageInfo

type isExecStreamRequest_Event interface {
	isExecStreamRequest_Event()
}

type ExecStreamRequest_Start_ struct {
	Start *ExecStreamRequest_Start `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type ExecStreamRequest_Input_ struct {
	Input *ExecStreamRequest_Input `protobuf:"bytes,2,opt,name=input,proto3,oneof"`
}

type ExecStreamRequest_Winch struct {
	Winch *ExecStreamRequest_WindowSize `protobuf:"bytes,3,opt,name=winch,proto3,oneof"`
}

func (*ExecStreamRequest_Start_) isExecStreamRequest_Event() {}

func (*ExecStreamRequest_Input_) isExecStreamRequest_Event() {}

func (*ExecStreamRequest_Winch) isExecStreamRequest_Event() {}

func (m *ExecStreamRequest) GetEvent() isExecStreamRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *ExecStreamRequest) GetStart() *ExecStreamRequest_Start {
	if x, ok := m.GetEvent().(*ExecStreamRequest_Start_); ok {
		return x.Start
	}
	return nil
}

func (m *ExecStreamRequest) GetInput() *ExecStreamRequest_Input {
	if x, ok := m.GetEvent().(*ExecStreamRequest_Input_); ok {
		return x.Input
	}
	return nil
}

func (m *ExecStreamRequest) GetWinch() *ExecStreamRequest_WindowSize {
	if x, ok := m.GetEvent().(*ExecStreamRequest_Winch); ok {
		return x.Winch
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExecStreamRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExecStreamRequest_Start_)(nil),
		(*ExecStreamRequest_Input_)(nil),
		(*ExecStreamRequest_Winch)(nil),
	}
}

type ExecStreamRequest_Start struct {
	// Deployment to exec into
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// Args including the command at args[0] to execute.
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// Pty is set if we should allocate a PTY for this exec stream.
	Pty                  *ExecStreamRequest_PTY `protobuf:"bytes,3,opt,name=pty,proto3" json:"pty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ExecStreamRequest_Start) Reset()         { *m = ExecStreamRequest_Start{} }
func (m *ExecStreamRequest_Start) String() string { return proto.CompactTextString(m) }
func (*ExecStreamRequest_Start) ProtoMessage()    {}
func (*ExecStreamRequest_Start) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{23, 0}
}

func (m *ExecStreamRequest_Start) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamRequest_Start.Unmarshal(m, b)
}
func (m *ExecStreamRequest_Start) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamRequest_Start.Marshal(b, m, deterministic)
}
func (m *ExecStreamRequest_Start) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamRequest_Start.Merge(m, src)
}
func (m *ExecStreamRequest_Start) XXX_Size() int {
	return xxx_messageInfo_ExecStreamRequest_Start.Size(m)
}
func (m *ExecStreamRequest_Start) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamRequest_Start.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamRequest_Start proto.InternalMessageInfo

func (m *ExecStreamRequest_Start) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *ExecStreamRequest_Start) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ExecStreamRequest_Start) GetPty() *ExecStreamRequest_PTY {
	if m != nil {
		return m.Pty
	}
	return nil
}

type ExecStreamRequest_Input struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecStreamRequest_Input) Reset()         { *m = ExecStreamRequest_Input{} }
func (m *ExecStreamRequest_Input) String() string { return proto.CompactTextString(m) }
func (*ExecStreamRequest_Input) ProtoMessage()    {}
func (*ExecStreamRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{23, 1}
}

func (m *ExecStreamRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamRequest_Input.Unmarshal(m, b)
}
func (m *ExecStreamRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamRequest_Input.Marshal(b, m, deterministic)
}
func (m *ExecStreamRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamRequest_Input.Merge(m, src)
}
func (m *ExecStreamRequest_Input) XXX_Size() int {
	return xxx_messageInfo_ExecStreamRequest_Input.Size(m)
}
func (m *ExecStreamRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamRequest_Input proto.InternalMessageInfo

func (m *ExecStreamRequest_Input) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ExecStreamRequest_PTY struct {
	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	// term is the TERM value to request on the remote side. This should be set.
	Term string `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
	// window_size is the initial window size
	WindowSize           *ExecStreamRequest_WindowSize `protobuf:"bytes,3,opt,name=window_size,json=windowSize,proto3" json:"window_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ExecStreamRequest_PTY) Reset()         { *m = ExecStreamRequest_PTY{} }
func (m *ExecStreamRequest_PTY) String() string { return proto.CompactTextString(m) }
func (*ExecStreamRequest_PTY) ProtoMessage()    {}
func (*ExecStreamRequest_PTY) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{23, 2}
}

func (m *ExecStreamRequest_PTY) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamRequest_PTY.Unmarshal(m, b)
}
func (m *ExecStreamRequest_PTY) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamRequest_PTY.Marshal(b, m, deterministic)
}
func (m *ExecStreamRequest_PTY) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamRequest_PTY.Merge(m, src)
}
func (m *ExecStreamRequest_PTY) XXX_Size() int {
	return xxx_messageInfo_ExecStreamRequest_PTY.Size(m)
}
func (m *ExecStreamRequest_PTY) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamRequest_PTY.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamRequest_PTY proto.InternalMessageInfo

func (m *ExecStreamRequest_PTY) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *ExecStreamRequest_PTY) GetTerm() string {
	if m != nil {
		return m.Term
	}
	return ""
}

func (m *ExecStreamRequest_PTY) GetWindowSize() *ExecStreamRequest_WindowSize {
	if m != nil {
		return m.WindowSize
	}
	return nil
}

type ExecStreamRequest_WindowSize struct {
	Rows                 int32    `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols                 int32    `protobuf:"varint,2,opt,name=cols,proto3" json:"cols,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecStreamRequest_WindowSize) Reset()         { *m = ExecStreamRequest_WindowSize{} }
func (m *ExecStreamRequest_WindowSize) String() string { return proto.CompactTextString(m) }
func (*ExecStreamRequest_WindowSize) ProtoMessage()    {}
func (*ExecStreamRequest_WindowSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{23, 3}
}

func (m *ExecStreamRequest_WindowSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamRequest_WindowSize.Unmarshal(m, b)
}
func (m *ExecStreamRequest_WindowSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamRequest_WindowSize.Marshal(b, m, deterministic)
}
func (m *ExecStreamRequest_WindowSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamRequest_WindowSize.Merge(m, src)
}
func (m *ExecStreamRequest_WindowSize) XXX_Size() int {
	return xxx_messageInfo_ExecStreamRequest_WindowSize.Size(m)
}
func (m *ExecStreamRequest_WindowSize) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamRequest_WindowSize.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamRequest_WindowSize proto.InternalMessageInfo

func (m *ExecStreamRequest_WindowSize) GetRows() int32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *ExecStreamRequest_WindowSize) GetCols() int32 {
	if m != nil {
		return m.Cols
	}
	return 0
}

func (m *ExecStreamRequest_WindowSize) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ExecStreamRequest_WindowSize) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type ExecStreamResponse struct {
	// Types that are valid to be assigned to Event:
	//	*ExecStreamResponse_Output_
	//	*ExecStreamResponse_Exit_
	Event                isExecStreamResponse_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ExecStreamResponse) Reset()         { *m = ExecStreamResponse{} }
func (m *ExecStreamResponse) String() string { return proto.CompactTextString(m) }
func (*ExecStreamResponse) ProtoMessage()    {}
func (*ExecStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{24}
}

func (m *ExecStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamResponse.Unmarshal(m, b)
}
func (m *ExecStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamResponse.Marshal(b, m, deterministic)
}
func (m *ExecStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamResponse.Merge(m, src)
}
func (m *ExecStreamResponse) XXX_Size() int {
	return xxx_messageInfo_ExecStreamResponse.Size(m)
}
func (m *ExecStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamResponse proto.InternalMessageInfo

type isExecStreamResponse_Event interface {
	isExecStreamResponse_Event()
}

type ExecStreamResponse_Output_ struct {
	Output *ExecStreamResponse_Output `protobuf:"bytes,1,opt,name=output,proto3,oneof"`
}

type ExecStreamResponse_Exit_ struct {
	Exit *ExecStreamResponse_Exit `protobuf:"bytes,2,opt,name=exit,proto3,oneof"`
}

func (*ExecStreamResponse_Output_) isExecStreamResponse_Event() {}

func (*ExecStreamResponse_Exit_) isExecStreamResponse_Event() {}

func (m *ExecStreamResponse) GetEvent() isExecStreamResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *ExecStreamResponse) GetOutput() *ExecStreamResponse_Output {
	if x, ok := m.GetEvent().(*ExecStreamResponse_Output_); ok {
		return x.Output
	}
	return nil
}

func (m *ExecStreamResponse) GetExit() *ExecStreamResponse_Exit {
	if x, ok := m.GetEvent().(*ExecStreamResponse_Exit_); ok {
		return x.Exit
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExecStreamResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExecStreamResponse_Output_)(nil),
		(*ExecStreamResponse_Exit_)(nil),
	}
}

type ExecStreamResponse_Exit struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecStreamResponse_Exit) Reset()         { *m = ExecStreamResponse_Exit{} }
func (m *ExecStreamResponse_Exit) String() string { return proto.CompactTextString(m) }
func (*ExecStreamResponse_Exit) ProtoMessage()    {}
func (*ExecStreamResponse_Exit) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{24, 0}
}

func (m *ExecStreamResponse_Exit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamResponse_Exit.Unmarshal(m, b)
}
func (m *ExecStreamResponse_Exit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamResponse_Exit.Marshal(b, m, deterministic)
}
func (m *ExecStreamResponse_Exit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamResponse_Exit.Merge(m, src)
}
func (m *ExecStreamResponse_Exit) XXX_Size() int {
	return xxx_messageInfo_ExecStreamResponse_Exit.Size(m)
}
func (m *ExecStreamResponse_Exit) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamResponse_Exit.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamResponse_Exit proto.InternalMessageInfo

func (m *ExecStreamResponse_Exit) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type ExecStreamResponse_Output struct {
	Channel              ExecStreamResponse_Output_Channel `protobuf:"varint,1,opt,name=channel,proto3,enum=hashicorp.waypoint.ExecStreamResponse_Output_Channel" json:"channel,omitempty"`
	Data                 []byte                            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ExecStreamResponse_Output) Reset()         { *m = ExecStreamResponse_Output{} }
func (m *ExecStreamResponse_Output) String() string { return proto.CompactTextString(m) }
func (*ExecStreamResponse_Output) ProtoMessage()    {}
func (*ExecStreamResponse_Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{24, 1}
}

func (m *ExecStreamResponse_Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamResponse_Output.Unmarshal(m, b)
}
func (m *ExecStreamResponse_Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamResponse_Output.Marshal(b, m, deterministic)
}
func (m *ExecStreamResponse_Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamResponse_Output.Merge(m, src)
}
func (m *ExecStreamResponse_Output) XXX_Size() int {
	return xxx_messageInfo_ExecStreamResponse_Output.Size(m)
}
func (m *ExecStreamResponse_Output) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamResponse_Output.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamResponse_Output proto.InternalMessageInfo

func (m *ExecStreamResponse_Output) GetChannel() ExecStreamResponse_Output_Channel {
	if m != nil {
		return m.Channel
	}
	return ExecStreamResponse_Output_UNKNOWN
}

func (m *ExecStreamResponse_Output) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EntrypointConfigRequest struct {
	// id of the deployment that this instance is a part of
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// instance_id is a unique ID generated by the running entrypoint. This is
	// not an auth mechanism, just a way to associate data with the correct instance.
	InstanceId           string   `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntrypointConfigRequest) Reset()         { *m = EntrypointConfigRequest{} }
func (m *EntrypointConfigRequest) String() string { return proto.CompactTextString(m) }
func (*EntrypointConfigRequest) ProtoMessage()    {}
func (*EntrypointConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{25}
}

func (m *EntrypointConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointConfigRequest.Unmarshal(m, b)
}
func (m *EntrypointConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointConfigRequest.Marshal(b, m, deterministic)
}
func (m *EntrypointConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointConfigRequest.Merge(m, src)
}
func (m *EntrypointConfigRequest) XXX_Size() int {
	return xxx_messageInfo_EntrypointConfigRequest.Size(m)
}
func (m *EntrypointConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointConfigRequest proto.InternalMessageInfo

func (m *EntrypointConfigRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *EntrypointConfigRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type EntrypointConfigResponse struct {
	Config               *EntrypointConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EntrypointConfigResponse) Reset()         { *m = EntrypointConfigResponse{} }
func (m *EntrypointConfigResponse) String() string { return proto.CompactTextString(m) }
func (*EntrypointConfigResponse) ProtoMessage()    {}
func (*EntrypointConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{26}
}

func (m *EntrypointConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointConfigResponse.Unmarshal(m, b)
}
func (m *EntrypointConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointConfigResponse.Marshal(b, m, deterministic)
}
func (m *EntrypointConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointConfigResponse.Merge(m, src)
}
func (m *EntrypointConfigResponse) XXX_Size() int {
	return xxx_messageInfo_EntrypointConfigResponse.Size(m)
}
func (m *EntrypointConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointConfigResponse proto.InternalMessageInfo

func (m *EntrypointConfigResponse) GetConfig() *EntrypointConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type EntrypointConfig struct {
	// Exec are requested exec sessions for this instance.
	Exec                 []*EntrypointConfig_Exec `protobuf:"bytes,1,rep,name=exec,proto3" json:"exec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *EntrypointConfig) Reset()         { *m = EntrypointConfig{} }
func (m *EntrypointConfig) String() string { return proto.CompactTextString(m) }
func (*EntrypointConfig) ProtoMessage()    {}
func (*EntrypointConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{27}
}

func (m *EntrypointConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointConfig.Unmarshal(m, b)
}
func (m *EntrypointConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointConfig.Marshal(b, m, deterministic)
}
func (m *EntrypointConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointConfig.Merge(m, src)
}
func (m *EntrypointConfig) XXX_Size() int {
	return xxx_messageInfo_EntrypointConfig.Size(m)
}
func (m *EntrypointConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointConfig proto.InternalMessageInfo

func (m *EntrypointConfig) GetExec() []*EntrypointConfig_Exec {
	if m != nil {
		return m.Exec
	}
	return nil
}

type EntrypointConfig_Exec struct {
	Index                int64                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Args                 []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Pty                  *ExecStreamRequest_PTY `protobuf:"bytes,3,opt,name=pty,proto3" json:"pty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *EntrypointConfig_Exec) Reset()         { *m = EntrypointConfig_Exec{} }
func (m *EntrypointConfig_Exec) String() string { return proto.CompactTextString(m) }
func (*EntrypointConfig_Exec) ProtoMessage()    {}
func (*EntrypointConfig_Exec) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{27, 0}
}

func (m *EntrypointConfig_Exec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointConfig_Exec.Unmarshal(m, b)
}
func (m *EntrypointConfig_Exec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointConfig_Exec.Marshal(b, m, deterministic)
}
func (m *EntrypointConfig_Exec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointConfig_Exec.Merge(m, src)
}
func (m *EntrypointConfig_Exec) XXX_Size() int {
	return xxx_messageInfo_EntrypointConfig_Exec.Size(m)
}
func (m *EntrypointConfig_Exec) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointConfig_Exec.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointConfig_Exec proto.InternalMessageInfo

func (m *EntrypointConfig_Exec) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *EntrypointConfig_Exec) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *EntrypointConfig_Exec) GetPty() *ExecStreamRequest_PTY {
	if m != nil {
		return m.Pty
	}
	return nil
}

// A batch of data for log streaming from the entrypoint.
type EntrypointLogBatch struct {
	// instance_id is a unique ID generated by the running entrypoint. This is
	// not an auth mechanism, just a way to associate data with the correct instance.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// lines is the set of lines
	Lines                []*LogBatch_Entry `protobuf:"bytes,2,rep,name=lines,proto3" json:"lines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EntrypointLogBatch) Reset()         { *m = EntrypointLogBatch{} }
func (m *EntrypointLogBatch) String() string { return proto.CompactTextString(m) }
func (*EntrypointLogBatch) ProtoMessage()    {}
func (*EntrypointLogBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{28}
}

func (m *EntrypointLogBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointLogBatch.Unmarshal(m, b)
}
func (m *EntrypointLogBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointLogBatch.Marshal(b, m, deterministic)
}
func (m *EntrypointLogBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointLogBatch.Merge(m, src)
}
func (m *EntrypointLogBatch) XXX_Size() int {
	return xxx_messageInfo_EntrypointLogBatch.Size(m)
}
func (m *EntrypointLogBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointLogBatch.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointLogBatch proto.InternalMessageInfo

func (m *EntrypointLogBatch) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *EntrypointLogBatch) GetLines() []*LogBatch_Entry {
	if m != nil {
		return m.Lines
	}
	return nil
}

type EntrypointExecRequest struct {
	// Types that are valid to be assigned to Event:
	//	*EntrypointExecRequest_Open_
	//	*EntrypointExecRequest_Exit_
	//	*EntrypointExecRequest_Output_
	//	*EntrypointExecRequest_Error_
	Event                isEntrypointExecRequest_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *EntrypointExecRequest) Reset()         { *m = EntrypointExecRequest{} }
func (m *EntrypointExecRequest) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecRequest) ProtoMessage()    {}
func (*EntrypointExecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{29}
}

func (m *EntrypointExecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecRequest.Unmarshal(m, b)
}
func (m *EntrypointExecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecRequest.Marshal(b, m, deterministic)
}
func (m *EntrypointExecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecRequest.Merge(m, src)
}
func (m *EntrypointExecRequest) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecRequest.Size(m)
}
func (m *EntrypointExecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecRequest proto.InternalMessageInfo

type isEntrypointExecRequest_Event interface {
	isEntrypointExecRequest_Event()
}

type EntrypointExecRequest_Open_ struct {
	Open *EntrypointExecRequest_Open `protobuf:"bytes,1,opt,name=open,proto3,oneof"`
}

type EntrypointExecRequest_Exit_ struct {
	Exit *EntrypointExecRequest_Exit `protobuf:"bytes,2,opt,name=exit,proto3,oneof"`
}

type EntrypointExecRequest_Output_ struct {
	Output *EntrypointExecRequest_Output `protobuf:"bytes,3,opt,name=output,proto3,oneof"`
}

type EntrypointExecRequest_Error_ struct {
	Error *EntrypointExecRequest_Error `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*EntrypointExecRequest_Open_) isEntrypointExecRequest_Event() {}

func (*EntrypointExecRequest_Exit_) isEntrypointExecRequest_Event() {}

func (*EntrypointExecRequest_Output_) isEntrypointExecRequest_Event() {}

func (*EntrypointExecRequest_Error_) isEntrypointExecRequest_Event() {}

func (m *EntrypointExecRequest) GetEvent() isEntrypointExecRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *EntrypointExecRequest) GetOpen() *EntrypointExecRequest_Open {
	if x, ok := m.GetEvent().(*EntrypointExecRequest_Open_); ok {
		return x.Open
	}
	return nil
}

func (m *EntrypointExecRequest) GetExit() *EntrypointExecRequest_Exit {
	if x, ok := m.GetEvent().(*EntrypointExecRequest_Exit_); ok {
		return x.Exit
	}
	return nil
}

func (m *EntrypointExecRequest) GetOutput() *EntrypointExecRequest_Output {
	if x, ok := m.GetEvent().(*EntrypointExecRequest_Output_); ok {
		return x.Output
	}
	return nil
}

func (m *EntrypointExecRequest) GetError() *EntrypointExecRequest_Error {
	if x, ok := m.GetEvent().(*EntrypointExecRequest_Error_); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EntrypointExecRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EntrypointExecRequest_Open_)(nil),
		(*EntrypointExecRequest_Exit_)(nil),
		(*EntrypointExecRequest_Output_)(nil),
		(*EntrypointExecRequest_Error_)(nil),
	}
}

type EntrypointExecRequest_Open struct {
	InstanceId           string   `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Index                int64    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntrypointExecRequest_Open) Reset()         { *m = EntrypointExecRequest_Open{} }
func (m *EntrypointExecRequest_Open) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecRequest_Open) ProtoMessage()    {}
func (*EntrypointExecRequest_Open) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{29, 0}
}

func (m *EntrypointExecRequest_Open) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecRequest_Open.Unmarshal(m, b)
}
func (m *EntrypointExecRequest_Open) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecRequest_Open.Marshal(b, m, deterministic)
}
func (m *EntrypointExecRequest_Open) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecRequest_Open.Merge(m, src)
}
func (m *EntrypointExecRequest_Open) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecRequest_Open.Size(m)
}
func (m *EntrypointExecRequest_Open) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecRequest_Open.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecRequest_Open proto.InternalMessageInfo

func (m *EntrypointExecRequest_Open) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *EntrypointExecRequest_Open) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type EntrypointExecRequest_Exit struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntrypointExecRequest_Exit) Reset()         { *m = EntrypointExecRequest_Exit{} }
func (m *EntrypointExecRequest_Exit) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecRequest_Exit) ProtoMessage()    {}
func (*EntrypointExecRequest_Exit) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{29, 1}
}

func (m *EntrypointExecRequest_Exit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecRequest_Exit.Unmarshal(m, b)
}
func (m *EntrypointExecRequest_Exit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecRequest_Exit.Marshal(b, m, deterministic)
}
func (m *EntrypointExecRequest_Exit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecRequest_Exit.Merge(m, src)
}
func (m *EntrypointExecRequest_Exit) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecRequest_Exit.Size(m)
}
func (m *EntrypointExecRequest_Exit) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecRequest_Exit.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecRequest_Exit proto.InternalMessageInfo

func (m *EntrypointExecRequest_Exit) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type EntrypointExecRequest_Output struct {
	Channel              EntrypointExecRequest_Output_Channel `protobuf:"varint,1,opt,name=channel,proto3,enum=hashicorp.waypoint.EntrypointExecRequest_Output_Channel" json:"channel,omitempty"`
	Data                 []byte                               `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *EntrypointExecRequest_Output) Reset()         { *m = EntrypointExecRequest_Output{} }
func (m *EntrypointExecRequest_Output) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecRequest_Output) ProtoMessage()    {}
func (*EntrypointExecRequest_Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{29, 2}
}

func (m *EntrypointExecRequest_Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecRequest_Output.Unmarshal(m, b)
}
func (m *EntrypointExecRequest_Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecRequest_Output.Marshal(b, m, deterministic)
}
func (m *EntrypointExecRequest_Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecRequest_Output.Merge(m, src)
}
func (m *EntrypointExecRequest_Output) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecRequest_Output.Size(m)
}
func (m *EntrypointExecRequest_Output) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecRequest_Output.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecRequest_Output proto.InternalMessageInfo

func (m *EntrypointExecRequest_Output) GetChannel() EntrypointExecRequest_Output_Channel {
	if m != nil {
		return m.Channel
	}
	return EntrypointExecRequest_Output_UNKNOWN
}

func (m *EntrypointExecRequest_Output) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EntrypointExecRequest_Error struct {
	Error                *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EntrypointExecRequest_Error) Reset()         { *m = EntrypointExecRequest_Error{} }
func (m *EntrypointExecRequest_Error) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecRequest_Error) ProtoMessage()    {}
func (*EntrypointExecRequest_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{29, 3}
}

func (m *EntrypointExecRequest_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecRequest_Error.Unmarshal(m, b)
}
func (m *EntrypointExecRequest_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecRequest_Error.Marshal(b, m, deterministic)
}
func (m *EntrypointExecRequest_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecRequest_Error.Merge(m, src)
}
func (m *EntrypointExecRequest_Error) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecRequest_Error.Size(m)
}
func (m *EntrypointExecRequest_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecRequest_Error.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecRequest_Error proto.InternalMessageInfo

func (m *EntrypointExecRequest_Error) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

type EntrypointExecResponse struct {
	// Types that are valid to be assigned to Event:
	//	*EntrypointExecResponse_Input
	//	*EntrypointExecResponse_Winch
	//	*EntrypointExecResponse_Opened
	Event                isEntrypointExecResponse_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *EntrypointExecResponse) Reset()         { *m = EntrypointExecResponse{} }
func (m *EntrypointExecResponse) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecResponse) ProtoMessage()    {}
func (*EntrypointExecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{30}
}

func (m *EntrypointExecResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecResponse.Unmarshal(m, b)
}
func (m *EntrypointExecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecResponse.Marshal(b, m, deterministic)
}
func (m *EntrypointExecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecResponse.Merge(m, src)
}
func (m *EntrypointExecResponse) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecResponse.Size(m)
}
func (m *EntrypointExecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecResponse proto.InternalMessageInfo

type isEntrypointExecResponse_Event interface {
	isEntrypointExecResponse_Event()
}

type EntrypointExecResponse_Input struct {
	Input []byte `protobuf:"bytes,1,opt,name=input,proto3,oneof"`
}

type EntrypointExecResponse_Winch struct {
	Winch *ExecStreamRequest_WindowSize `protobuf:"bytes,2,opt,name=winch,proto3,oneof"`
}

type EntrypointExecResponse_Opened struct {
	Opened bool `protobuf:"varint,3,opt,name=opened,proto3,oneof"`
}

func (*EntrypointExecResponse_Input) isEntrypointExecResponse_Event() {}

func (*EntrypointExecResponse_Winch) isEntrypointExecResponse_Event() {}

func (*EntrypointExecResponse_Opened) isEntrypointExecResponse_Event() {}

func (m *EntrypointExecResponse) GetEvent() isEntrypointExecResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *EntrypointExecResponse) GetInput() []byte {
	if x, ok := m.GetEvent().(*EntrypointExecResponse_Input); ok {
		return x.Input
	}
	return nil
}

func (m *EntrypointExecResponse) GetWinch() *ExecStreamRequest_WindowSize {
	if x, ok := m.GetEvent().(*EntrypointExecResponse_Winch); ok {
		return x.Winch
	}
	return nil
}

func (m *EntrypointExecResponse) GetOpened() bool {
	if x, ok := m.GetEvent().(*EntrypointExecResponse_Opened); ok {
		return x.Opened
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EntrypointExecResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EntrypointExecResponse_Input)(nil),
		(*EntrypointExecResponse_Winch)(nil),
		(*EntrypointExecResponse_Opened)(nil),
	}
}

type TokenTransport struct {
	Body                 []byte            `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Signature            []byte            `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	KeyId                string            `protobuf:"bytes,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TokenTransport) Reset()         { *m = TokenTransport{} }
func (m *TokenTransport) String() string { return proto.CompactTextString(m) }
func (*TokenTransport) ProtoMessage()    {}
func (*TokenTransport) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{31}
}

func (m *TokenTransport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenTransport.Unmarshal(m, b)
}
func (m *TokenTransport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenTransport.Marshal(b, m, deterministic)
}
func (m *TokenTransport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenTransport.Merge(m, src)
}
func (m *TokenTransport) XXX_Size() int {
	return xxx_messageInfo_TokenTransport.Size(m)
}
func (m *TokenTransport) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenTransport.DiscardUnknown(m)
}

var xxx_messageInfo_TokenTransport proto.InternalMessageInfo

func (m *TokenTransport) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *TokenTransport) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *TokenTransport) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *TokenTransport) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Token struct {
	User                 string               `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	TokenId              []byte               `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	ValidUntil           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Login                bool                 `protobuf:"varint,4,opt,name=login,proto3" json:"login,omitempty"`
	Invite               bool                 `protobuf:"varint,5,opt,name=invite,proto3" json:"invite,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{32}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Token) GetTokenId() []byte {
	if m != nil {
		return m.TokenId
	}
	return nil
}

func (m *Token) GetValidUntil() *timestamp.Timestamp {
	if m != nil {
		return m.ValidUntil
	}
	return nil
}

func (m *Token) GetLogin() bool {
	if m != nil {
		return m.Login
	}
	return false
}

func (m *Token) GetInvite() bool {
	if m != nil {
		return m.Invite
	}
	return false
}

func init() {
	proto.RegisterEnum("hashicorp.waypoint.Component_Type", Component_Type_name, Component_Type_value)
	proto.RegisterEnum("hashicorp.waypoint.Status_State", Status_State_name, Status_State_value)
	proto.RegisterEnum("hashicorp.waypoint.ListDeploymentsRequest_Order", ListDeploymentsRequest_Order_name, ListDeploymentsRequest_Order_value)
	proto.RegisterEnum("hashicorp.waypoint.Deployment_State", Deployment_State_name, Deployment_State_value)
	proto.RegisterEnum("hashicorp.waypoint.ExecStreamResponse_Output_Channel", ExecStreamResponse_Output_Channel_name, ExecStreamResponse_Output_Channel_value)
	proto.RegisterEnum("hashicorp.waypoint.EntrypointExecRequest_Output_Channel", EntrypointExecRequest_Output_Channel_name, EntrypointExecRequest_Output_Channel_value)
	proto.RegisterType((*Component)(nil), "hashicorp.waypoint.Component")
	proto.RegisterType((*Status)(nil), "hashicorp.waypoint.Status")
	proto.RegisterType((*StatusFilter)(nil), "hashicorp.waypoint.StatusFilter")
	proto.RegisterType((*StatusFilter_Filter)(nil), "hashicorp.waypoint.StatusFilter.Filter")
	proto.RegisterType((*UpsertBuildRequest)(nil), "hashicorp.waypoint.UpsertBuildRequest")
	proto.RegisterType((*UpsertBuildResponse)(nil), "hashicorp.waypoint.UpsertBuildResponse")
	proto.RegisterType((*ListBuildsResponse)(nil), "hashicorp.waypoint.ListBuildsResponse")
	proto.RegisterType((*Build)(nil), "hashicorp.waypoint.Build")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.Build.LabelsEntry")
	proto.RegisterType((*Artifact)(nil), "hashicorp.waypoint.Artifact")
	proto.RegisterType((*UpsertPushedArtifactRequest)(nil), "hashicorp.waypoint.UpsertPushedArtifactRequest")
	proto.RegisterType((*UpsertPushedArtifactResponse)(nil), "hashicorp.waypoint.UpsertPushedArtifactResponse")
	proto.RegisterType((*ListPushedArtifactsResponse)(nil), "hashicorp.waypoint.ListPushedArtifactsResponse")
	proto.RegisterType((*PushedArtifact)(nil), "hashicorp.waypoint.PushedArtifact")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.PushedArtifact.LabelsEntry")
	proto.RegisterType((*GetDeploymentRequest)(nil), "hashicorp.waypoint.GetDeploymentRequest")
	proto.RegisterType((*UpsertDeploymentRequest)(nil), "hashicorp.waypoint.UpsertDeploymentRequest")
	proto.RegisterType((*UpsertDeploymentResponse)(nil), "hashicorp.waypoint.UpsertDeploymentResponse")
	proto.RegisterType((*ListDeploymentsRequest)(nil), "hashicorp.waypoint.ListDeploymentsRequest")
	proto.RegisterType((*ListDeploymentsResponse)(nil), "hashicorp.waypoint.ListDeploymentsResponse")
	proto.RegisterType((*Deployment)(nil), "hashicorp.waypoint.Deployment")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.Deployment.LabelsEntry")
	proto.RegisterType((*UpsertReleaseRequest)(nil), "hashicorp.waypoint.UpsertReleaseRequest")
	proto.RegisterType((*UpsertReleaseResponse)(nil), "hashicorp.waypoint.UpsertReleaseResponse")
	proto.RegisterType((*Release)(nil), "hashicorp.waypoint.Release")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.Release.LabelsEntry")
	proto.RegisterType((*Release_Split)(nil), "hashicorp.waypoint.Release.Split")
	proto.RegisterType((*Release_SplitTarget)(nil), "hashicorp.waypoint.Release.SplitTarget")
	proto.RegisterType((*GetLogStreamRequest)(nil), "hashicorp.waypoint.GetLogStreamRequest")
	proto.RegisterType((*LogBatch)(nil), "hashicorp.waypoint.LogBatch")
	proto.RegisterType((*LogBatch_Entry)(nil), "hashicorp.waypoint.LogBatch.Entry")
	proto.RegisterType((*ExecStreamRequest)(nil), "hashicorp.waypoint.ExecStreamRequest")
	proto.RegisterType((*ExecStreamRequest_Start)(nil), "hashicorp.waypoint.ExecStreamRequest.Start")
	proto.RegisterType((*ExecStreamRequest_Input)(nil), "hashicorp.waypoint.ExecStreamRequest.Input")
	proto.RegisterType((*ExecStreamRequest_PTY)(nil), "hashicorp.waypoint.ExecStreamRequest.PTY")
	proto.RegisterType((*ExecStreamRequest_WindowSize)(nil), "hashicorp.waypoint.ExecStreamRequest.WindowSize")
	proto.RegisterType((*ExecStreamResponse)(nil), "hashicorp.waypoint.ExecStreamResponse")
	proto.RegisterType((*ExecStreamResponse_Exit)(nil), "hashicorp.waypoint.ExecStreamResponse.Exit")
	proto.RegisterType((*ExecStreamResponse_Output)(nil), "hashicorp.waypoint.ExecStreamResponse.Output")
	proto.RegisterType((*EntrypointConfigRequest)(nil), "hashicorp.waypoint.EntrypointConfigRequest")
	proto.RegisterType((*EntrypointConfigResponse)(nil), "hashicorp.waypoint.EntrypointConfigResponse")
	proto.RegisterType((*EntrypointConfig)(nil), "hashicorp.waypoint.EntrypointConfig")
	proto.RegisterType((*EntrypointConfig_Exec)(nil), "hashicorp.waypoint.EntrypointConfig.Exec")
	proto.RegisterType((*EntrypointLogBatch)(nil), "hashicorp.waypoint.EntrypointLogBatch")
	proto.RegisterType((*EntrypointExecRequest)(nil), "hashicorp.waypoint.EntrypointExecRequest")
	proto.RegisterType((*EntrypointExecRequest_Open)(nil), "hashicorp.waypoint.EntrypointExecRequest.Open")
	proto.RegisterType((*EntrypointExecRequest_Exit)(nil), "hashicorp.waypoint.EntrypointExecRequest.Exit")
	proto.RegisterType((*EntrypointExecRequest_Output)(nil), "hashicorp.waypoint.EntrypointExecRequest.Output")
	proto.RegisterType((*EntrypointExecRequest_Error)(nil), "hashicorp.waypoint.EntrypointExecRequest.Error")
	proto.RegisterType((*EntrypointExecResponse)(nil), "hashicorp.waypoint.EntrypointExecResponse")
	proto.RegisterType((*TokenTransport)(nil), "hashicorp.waypoint.TokenTransport")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.TokenTransport.MetadataEntry")
	proto.RegisterType((*Token)(nil), "hashicorp.waypoint.Token")
}

func init() {
	proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7)
}

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 2269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xdd, 0x73, 0x1b, 0x49,
	0x11, 0xcf, 0x4a, 0x5a, 0x7d, 0xb4, 0x6c, 0x9f, 0x6e, 0xf2, 0xe5, 0x6c, 0x72, 0xc4, 0x2c, 0xdc,
	0xc5, 0x49, 0x60, 0xed, 0x33, 0xe4, 0xca, 0x49, 0x2e, 0x77, 0xf8, 0x43, 0x71, 0x74, 0x28, 0xb6,
	0x19, 0xc9, 0x15, 0x0c, 0x45, 0x5c, 0x6b, 0xed, 0xd8, 0x5e, 0x22, 0xed, 0xee, 0xed, 0x8e, 0xec,
	0xe8, 0xaa, 0x78, 0xa3, 0xe0, 0x5f, 0xe0, 0xe5, 0x0a, 0xf8, 0x3b, 0xe0, 0x81, 0x37, 0xfe, 0x08,
	0x9e, 0xa8, 0x82, 0x07, 0x5e, 0x79, 0xe1, 0x95, 0x9a, 0x8f, 0xdd, 0xd5, 0xc7, 0x4a, 0x5a, 0x25,
	0xa1, 0xa8, 0x7b, 0xd2, 0xce, 0x4c, 0x77, 0x4f, 0x77, 0xcf, 0xaf, 0xbb, 0x67, 0x5a, 0x30, 0x17,
	0x10, 0xff, 0x9c, 0xf8, 0x86, 0xe7, 0xbb, 0xd4, 0x45, 0xe8, 0xcc, 0x0c, 0xce, 0xec, 0x96, 0xeb,
	0x7b, 0xc6, 0x85, 0xd9, 0xf3, 0x5c, 0xdb, 0xa1, 0xda, 0x8d, 0x53, 0xd7, 0x3d, 0x6d, 0x93, 0x15,
	0x4e, 0x71, 0xdc, 0x3d, 0x59, 0x31, 0x9d, 0x9e, 0x20, 0xd7, 0x6e, 0x0e, 0x2f, 0x91, 0x8e, 0x47,
	0xc3, 0xc5, 0xdb, 0xc3, 0x8b, 0xd4, 0xee, 0x90, 0x80, 0x9a, 0x1d, 0x4f, 0x12, 0x5c, 0x97, 0x04,
	0xbe, 0xd7, 0x5a, 0x09, 0xa8, 0x49, 0xbb, 0x81, 0x58, 0xd0, 0x7f, 0xab, 0x40, 0x69, 0xcb, 0xed,
	0x78, 0xae, 0x43, 0x1c, 0x8a, 0x3e, 0x81, 0x1c, 0xed, 0x79, 0x64, 0x51, 0x59, 0x52, 0x96, 0x17,
	0xd6, 0x74, 0x63, 0x54, 0x45, 0x23, 0x22, 0x36, 0x9a, 0x3d, 0x8f, 0x60, 0x4e, 0x8f, 0x10, 0xe4,
	0x1c, 0xb3, 0x43, 0x16, 0x33, 0x4b, 0xca, 0x72, 0x09, 0xf3, 0x6f, 0xdd, 0x80, 0x1c, 0xa3, 0x40,
	0x65, 0x28, 0x1c, 0xec, 0xfe, 0x78, 0x77, 0xef, 0xc5, 0x6e, 0xe5, 0x12, 0x1b, 0x6c, 0x1e, 0xd4,
	0xea, 0xdb, 0x55, 0x5c, 0x51, 0xd0, 0x1c, 0x14, 0x71, 0x75, 0xa7, 0xd6, 0x68, 0xe2, 0xc3, 0x4a,
	0x46, 0xff, 0x53, 0x06, 0xf2, 0x0d, 0xae, 0x1a, 0xfa, 0x04, 0x54, 0xa6, 0x64, 0xa8, 0xc7, 0x52,
	0x92, 0x1e, 0x82, 0x94, 0xff, 0x10, 0x2c, 0xc8, 0xd1, 0x22, 0x14, 0x2c, 0x42, 0x4d, 0xbb, 0x1d,
	0x48, 0x4d, 0xc2, 0x21, 0x5a, 0x06, 0x95, 0xf8, 0xbe, 0xeb, 0x2f, 0x66, 0x97, 0x94, 0xe5, 0xf2,
	0x1a, 0x32, 0x84, 0x3f, 0x0c, 0xdf, 0x6b, 0x49, 0x49, 0x58, 0x10, 0xa0, 0x87, 0x00, 0x01, 0x35,
	0x7d, 0x7a, 0xc4, 0x5c, 0xb8, 0x98, 0xe3, 0xe4, 0x5a, 0x48, 0x1e, 0xfa, 0xd7, 0x68, 0x86, 0xfe,
	0xc5, 0x25, 0x4e, 0xcd, 0xc6, 0xe8, 0x73, 0x98, 0x6f, 0xb9, 0x1d, 0xaf, 0x4d, 0x28, 0x11, 0xdc,
	0xea, 0x54, 0xee, 0xb9, 0x90, 0x81, 0x4d, 0xe9, 0x0f, 0x41, 0xe5, 0xf6, 0x8c, 0xf8, 0x0c, 0x1f,
	0xec, 0xee, 0xd6, 0x76, 0x77, 0x2a, 0x0a, 0x1b, 0x34, 0x0e, 0xb6, 0xb6, 0xaa, 0x8d, 0x46, 0x25,
	0x83, 0x4a, 0xa0, 0x56, 0x31, 0xde, 0xc3, 0x95, 0xac, 0xfe, 0x7b, 0x05, 0xe6, 0x84, 0x21, 0x4f,
	0xed, 0x36, 0x25, 0x3e, 0xda, 0x80, 0xc2, 0x09, 0xff, 0x0a, 0x16, 0x95, 0xa5, 0xec, 0x72, 0x79,
	0xed, 0xce, 0x78, 0x2f, 0x0a, 0x16, 0x43, 0xfc, 0xe0, 0x90, 0x4f, 0xab, 0x43, 0x5e, 0x0a, 0x5b,
	0x0f, 0x0f, 0x24, 0x93, 0xee, 0x40, 0x9e, 0x5d, 0x92, 0x47, 0xb2, 0x59, 0x84, 0xbc, 0x10, 0xa7,
	0x57, 0x01, 0x1d, 0x78, 0x01, 0xf1, 0xe9, 0x66, 0xd7, 0x6e, 0x5b, 0x98, 0x7c, 0xd9, 0x25, 0x01,
	0x45, 0x2b, 0xa0, 0x1e, 0xb3, 0x31, 0x3f, 0xea, 0xf2, 0xda, 0x8d, 0x24, 0xc9, 0x82, 0x41, 0xd0,
	0xe9, 0x4f, 0xe1, 0xf2, 0x80, 0x98, 0xc0, 0x73, 0x9d, 0x80, 0xcc, 0x2e, 0x67, 0x07, 0x50, 0xdd,
	0x0e, 0x84, 0x94, 0x20, 0x12, 0xf3, 0x31, 0xe4, 0xf9, 0x72, 0xe8, 0xb4, 0x09, 0x72, 0x24, 0xa1,
	0xfe, 0xe7, 0x0c, 0xa8, 0x7c, 0x06, 0x2d, 0x40, 0xc6, 0x16, 0x0a, 0x94, 0x70, 0xc6, 0xb6, 0xd0,
	0x1a, 0xe4, 0x45, 0xac, 0x71, 0xb7, 0x31, 0x20, 0x8c, 0x75, 0x1b, 0x96, 0x94, 0xe8, 0x31, 0x94,
	0x5a, 0x61, 0x84, 0x49, 0xb0, 0x7e, 0x30, 0x31, 0x0c, 0x71, 0x4c, 0x8f, 0xd6, 0xa1, 0x68, 0xfa,
	0xd4, 0x3e, 0x31, 0x5b, 0x54, 0x22, 0xf7, 0x56, 0x12, 0xef, 0x86, 0xa4, 0xc1, 0x11, 0x35, 0x7a,
	0x02, 0xf9, 0xb6, 0x79, 0x4c, 0xda, 0xc1, 0xa2, 0xca, 0xed, 0xfe, 0x70, 0xac, 0xdd, 0x46, 0x9d,
	0xd3, 0x55, 0x1d, 0xea, 0xf7, 0xb0, 0x64, 0xd2, 0x1e, 0x42, 0xb9, 0x6f, 0x1a, 0x55, 0x20, 0xfb,
	0x8a, 0xf4, 0xa4, 0x27, 0xd8, 0x27, 0xba, 0x02, 0xea, 0xb9, 0xd9, 0xee, 0x86, 0x19, 0x42, 0x0c,
	0x1e, 0x65, 0xd6, 0x15, 0xfd, 0x53, 0x28, 0x86, 0xfa, 0xa0, 0xd5, 0x3e, 0xfd, 0xc5, 0x39, 0x5e,
	0x19, 0x89, 0x9d, 0x0d, 0xa7, 0x17, 0xeb, 0xad, 0xff, 0x02, 0x6e, 0x0a, 0x34, 0xec, 0x77, 0x83,
	0x33, 0x62, 0x45, 0x96, 0x49, 0x74, 0x7d, 0x36, 0x22, 0x30, 0x31, 0xa7, 0x0d, 0x31, 0xc7, 0xe2,
	0x5f, 0xc2, 0xad, 0x64, 0xf1, 0x12, 0x2e, 0x6f, 0x2b, 0xff, 0x08, 0x6e, 0x32, 0x10, 0x0e, 0xae,
	0xc7, 0x68, 0xfc, 0x11, 0x94, 0x42, 0xd2, 0x10, 0x90, 0x69, 0xe4, 0xc7, 0x4c, 0xfa, 0xbf, 0x32,
	0xb0, 0x30, 0xb8, 0xfa, 0x4d, 0x46, 0xe9, 0x0d, 0x28, 0xf2, 0xa0, 0x3b, 0xb2, 0x2d, 0x9e, 0x5b,
	0x4b, 0xb8, 0xc0, 0xc7, 0x35, 0x0b, 0x3d, 0x8d, 0x00, 0x9c, 0xe7, 0x7e, 0x32, 0xa6, 0xfb, 0xe9,
	0x5d, 0x23, 0xf9, 0x31, 0x5c, 0xd9, 0x21, 0x74, 0x9b, 0x78, 0x6d, 0xb7, 0xd7, 0x61, 0x36, 0x4b,
	0x10, 0x7e, 0x07, 0xe6, 0xad, 0x68, 0xf2, 0x28, 0xf2, 0xfd, 0x5c, 0x3c, 0x59, 0xb3, 0xf4, 0x43,
	0xb8, 0x2e, 0x90, 0x36, 0xca, 0xff, 0x19, 0x40, 0x4c, 0x2a, 0x61, 0xf6, 0xad, 0x24, 0xf3, 0xfa,
	0x58, 0xfb, 0x38, 0xf4, 0x9f, 0xc1, 0xe2, 0xa8, 0xe8, 0x08, 0xc0, 0x6f, 0x27, 0xfb, 0x37, 0x19,
	0xb8, 0xc6, 0x10, 0x1c, 0x2f, 0x07, 0xa1, 0xda, 0xeb, 0x11, 0xae, 0x04, 0x72, 0x97, 0xa6, 0xd5,
	0x9f, 0x08, 0x5d, 0x4f, 0x41, 0x75, 0x7d, 0x8b, 0xf8, 0xb2, 0xda, 0xac, 0x26, 0x31, 0x26, 0x6f,
	0x6a, 0xec, 0x31, 0x3e, 0x2c, 0xd8, 0xd1, 0x07, 0x00, 0xfc, 0xe3, 0xc8, 0x22, 0x41, 0x8b, 0xc3,
	0xb4, 0x88, 0x4b, 0x7c, 0x66, 0x9b, 0x04, 0x2d, 0x76, 0x92, 0x6d, 0xbb, 0x63, 0x0b, 0x10, 0xce,
	0x63, 0x31, 0xd0, 0x1f, 0x80, 0xca, 0x85, 0xb0, 0xe2, 0x7a, 0xb0, 0xdb, 0xa8, 0x36, 0x2b, 0x97,
	0xd0, 0x02, 0x40, 0xa3, 0xb9, 0x81, 0x9b, 0x47, 0xcd, 0xda, 0xf3, 0x6a, 0x45, 0x41, 0xef, 0xc3,
	0xfc, 0xd6, 0xde, 0xf3, 0xfd, 0x7a, 0xb5, 0x59, 0x15, 0x53, 0x19, 0xfd, 0xe7, 0x70, 0x7d, 0x44,
	0xa5, 0x28, 0x8a, 0xcb, 0xb1, 0xc7, 0x42, 0x6f, 0x4c, 0x73, 0x72, 0x3f, 0x8b, 0xfe, 0xb7, 0x2c,
	0x40, 0xbc, 0x36, 0x12, 0xc1, 0x8f, 0x06, 0xab, 0xf3, 0x77, 0x27, 0x8b, 0x1e, 0xbc, 0x32, 0xc5,
	0xd1, 0x9f, 0x7d, 0xb3, 0xe8, 0xcf, 0xcd, 0x18, 0xfd, 0xb7, 0xa1, 0x1c, 0xc6, 0x73, 0x1c, 0xc6,
	0x10, 0x4e, 0xd5, 0x2c, 0xf4, 0xc3, 0x01, 0x48, 0xe6, 0x27, 0x94, 0x81, 0x3e, 0x3a, 0xb4, 0x19,
	0xc5, 0x7f, 0x81, 0xfb, 0xf7, 0xde, 0x14, 0x27, 0xbc, 0xe3, 0xd8, 0x7f, 0x34, 0xee, 0xe6, 0xb6,
	0x5f, 0xdd, 0xdd, 0x16, 0x37, 0x37, 0x80, 0xfc, 0x76, 0x75, 0xbf, 0xbe, 0x77, 0x58, 0xc9, 0xb2,
	0x85, 0xed, 0x6a, 0xa3, 0x89, 0xf7, 0x0e, 0x2b, 0x39, 0xfd, 0x39, 0x5c, 0x11, 0xf1, 0x89, 0x49,
	0x9b, 0x98, 0x01, 0x09, 0x03, 0xe8, 0x01, 0x14, 0x7c, 0x31, 0x23, 0x03, 0xf3, 0x66, 0x92, 0x4d,
	0x21, 0x53, 0x48, 0xab, 0xef, 0xc2, 0xd5, 0x21, 0x71, 0x12, 0x87, 0x6f, 0x28, 0xef, 0x77, 0x39,
	0x28, 0xc8, 0xc9, 0xff, 0x7f, 0xed, 0x30, 0x62, 0x1b, 0x72, 0x13, 0x90, 0x11, 0x12, 0xa1, 0xa7,
	0x30, 0x4f, 0x7d, 0xf3, 0xe4, 0xc4, 0x6e, 0x1d, 0x05, 0x5e, 0xdb, 0xa6, 0xf2, 0x4a, 0xfe, 0xed,
	0x09, 0x96, 0x1b, 0x0d, 0x46, 0x88, 0xe7, 0x24, 0x1f, 0x1f, 0xa1, 0xcf, 0x87, 0xca, 0xcb, 0x9d,
	0x49, 0x02, 0xde, 0x2d, 0xb6, 0xb4, 0x2f, 0x40, 0x15, 0x4a, 0x6c, 0x40, 0x81, 0x9a, 0xfe, 0x29,
	0xa1, 0x13, 0xaf, 0xf4, 0x03, 0x66, 0x34, 0x39, 0x3d, 0x0e, 0xf9, 0xb4, 0x3a, 0x94, 0xfb, 0xe6,
	0x53, 0x95, 0x26, 0xf6, 0xaa, 0xf2, 0x88, 0xdf, 0x62, 0xc7, 0xc5, 0x74, 0x53, 0x71, 0x38, 0xd4,
	0x1f, 0xc1, 0xe5, 0x1d, 0x42, 0xeb, 0xee, 0x69, 0x83, 0xfa, 0xc4, 0xec, 0xcc, 0x54, 0xf0, 0xfe,
	0xae, 0x40, 0xb1, 0xee, 0x9e, 0x6e, 0x9a, 0xb4, 0x75, 0x96, 0x4e, 0x8f, 0xdb, 0x50, 0xb6, 0x9d,
	0x80, 0x9a, 0x4e, 0x8b, 0x30, 0x12, 0xe1, 0x27, 0x08, 0xa7, 0x6a, 0x16, 0x7b, 0xa5, 0xb4, 0x6d,
	0x87, 0xb0, 0x54, 0x36, 0xf6, 0xaa, 0x14, 0x6e, 0x69, 0x88, 0xe3, 0x11, 0x0c, 0xda, 0x01, 0xa8,
	0xe2, 0x5c, 0xd6, 0xa1, 0x14, 0x3d, 0x9d, 0x65, 0x94, 0x4c, 0x7c, 0xfc, 0x45, 0xc4, 0xec, 0x09,
	0xcc, 0x64, 0x85, 0x4f, 0x60, 0xf6, 0xad, 0xff, 0x27, 0x07, 0xef, 0x57, 0x5f, 0x93, 0xd6, 0xa0,
	0x7b, 0xb6, 0x78, 0xba, 0xf6, 0xc3, 0x72, 0x7b, 0x3f, 0x49, 0xcd, 0x11, 0x2e, 0x16, 0x45, 0x3e,
	0x95, 0xef, 0x2a, 0x9f, 0x0b, 0xb1, 0x1d, 0xaf, 0x4b, 0x65, 0xe0, 0xa5, 0x14, 0x52, 0x63, 0x2c,
	0x4c, 0x08, 0xe7, 0x45, 0xcf, 0x40, 0xbd, 0xb0, 0x9d, 0xd6, 0x99, 0x0c, 0xc3, 0xd5, 0x74, 0x42,
	0x5e, 0xd8, 0x8e, 0xe5, 0x5e, 0x34, 0xec, 0xaf, 0xf8, 0x33, 0x8f, 0x0b, 0xd0, 0x7e, 0xc5, 0xf3,
	0x9f, 0x9f, 0x12, 0x51, 0x08, 0x72, 0xa6, 0x7f, 0xca, 0x92, 0x46, 0x96, 0xf9, 0x8a, 0x7d, 0xa3,
	0xc7, 0x90, 0xf5, 0x68, 0x4f, 0x6a, 0x72, 0x37, 0x9d, 0x26, 0xfb, 0xcd, 0x43, 0xcc, 0xb8, 0xb4,
	0x9b, 0xa0, 0x72, 0xd3, 0x98, 0x64, 0xcb, 0xa4, 0x26, 0xdf, 0x75, 0x0e, 0xf3, 0x6f, 0xed, 0xd7,
	0x0a, 0x64, 0xf7, 0x9b, 0x87, 0xe8, 0x1a, 0xe4, 0x89, 0x63, 0x1e, 0xb7, 0x45, 0xfa, 0x2b, 0x62,
	0x39, 0x62, 0x3c, 0x94, 0xf8, 0x9d, 0xf0, 0xe4, 0xd8, 0x37, 0xfa, 0x09, 0x94, 0x2f, 0xb8, 0x99,
	0x47, 0x81, 0xfd, 0x15, 0x79, 0x53, 0xff, 0x60, 0xb8, 0x88, 0xbe, 0xb5, 0x63, 0x80, 0x78, 0x85,
	0x6d, 0xea, 0xbb, 0x17, 0x01, 0x57, 0x45, 0xc5, 0xfc, 0x9b, 0xcd, 0xb5, 0x5c, 0xd9, 0xbb, 0x50,
	0x31, 0xff, 0x66, 0x69, 0xe1, 0xc2, 0xb6, 0xa8, 0x38, 0x22, 0x15, 0x8b, 0x01, 0x33, 0xe5, 0x8c,
	0xd8, 0xa7, 0x67, 0xa2, 0xfc, 0xaa, 0x58, 0x8e, 0x36, 0x0b, 0xa0, 0x92, 0x73, 0x16, 0x99, 0xff,
	0xcc, 0x00, 0xea, 0xd7, 0x4c, 0x96, 0x80, 0x1d, 0xc8, 0xbb, 0x5d, 0xca, 0x60, 0x23, 0xb0, 0xf7,
	0xfd, 0x69, 0x16, 0x09, 0x3e, 0x63, 0x8f, 0x33, 0x3d, 0xbb, 0x84, 0x25, 0x3b, 0xda, 0x80, 0x1c,
	0x79, 0x6d, 0xa7, 0x46, 0x9f, 0x14, 0x53, 0x7d, 0x6d, 0x33, 0x21, 0x9c, 0x55, 0xd3, 0x20, 0xc7,
	0xc6, 0xc2, 0x6a, 0x8b, 0x84, 0x9e, 0x60, 0xdf, 0xda, 0xd7, 0x0a, 0xe4, 0xc5, 0x9e, 0x68, 0x0f,
	0x0a, 0xad, 0x33, 0xd3, 0x71, 0x48, 0x5b, 0x76, 0x83, 0x1e, 0xcc, 0xa4, 0xb3, 0xb1, 0x25, 0x98,
	0x71, 0x28, 0x25, 0x82, 0x48, 0x26, 0x86, 0x88, 0x6e, 0x40, 0x41, 0xd2, 0x0d, 0x16, 0x70, 0x80,
	0x7c, 0xa3, 0xb9, 0xbd, 0x77, 0xd0, 0x14, 0xf5, 0xbb, 0xd1, 0xdc, 0xae, 0x62, 0x5c, 0xc9, 0xc4,
	0x7e, 0x3e, 0x82, 0xeb, 0x3c, 0x71, 0x70, 0x2d, 0xb6, 0x5c, 0xe7, 0xc4, 0x3e, 0x9d, 0x25, 0x0b,
	0x4e, 0xcd, 0x69, 0xfa, 0x4f, 0x61, 0x71, 0x74, 0x03, 0x79, 0x9a, 0x9f, 0x42, 0xbe, 0xc5, 0x67,
	0xe4, 0x31, 0x24, 0x5e, 0xfc, 0x46, 0xb8, 0x25, 0x8f, 0xfe, 0x17, 0x05, 0x2a, 0xc3, 0x8b, 0xe8,
	0x09, 0x3b, 0x57, 0xd2, 0x92, 0xf5, 0xe5, 0x6e, 0x1a, 0x81, 0xdc, 0xf7, 0x98, 0xb3, 0x69, 0x1d,
	0x76, 0xa6, 0x84, 0x5f, 0xad, 0x6d, 0xc7, 0x22, 0xaf, 0xb9, 0xcd, 0x59, 0x2c, 0x06, 0xef, 0x3c,
	0xec, 0x75, 0x17, 0x50, 0xac, 0x4d, 0x54, 0x4c, 0x86, 0x7c, 0xaa, 0x8c, 0xaf, 0x13, 0x99, 0x19,
	0xeb, 0x84, 0xfe, 0xef, 0x1c, 0x5c, 0x8d, 0x77, 0xe4, 0x86, 0xcb, 0xd3, 0xde, 0x86, 0x9c, 0xeb,
	0x11, 0x47, 0xc6, 0x95, 0x31, 0xd9, 0x71, 0x7d, 0x8c, 0xc6, 0x9e, 0x47, 0x1c, 0x16, 0x13, 0x8c,
	0x9b, 0x49, 0xe9, 0x0b, 0xab, 0x19, 0xa4, 0xf4, 0x47, 0x16, 0xfa, 0x22, 0x8a, 0xf2, 0x49, 0x79,
	0x2b, 0x59, 0x9b, 0xe1, 0x40, 0xdf, 0x09, 0x1b, 0xa7, 0xe2, 0xba, 0xb5, 0x32, 0x83, 0x4a, 0x8c,
	0x8d, 0x55, 0x08, 0xce, 0xaf, 0x3d, 0x81, 0x1c, 0x33, 0x75, 0xfa, 0xe9, 0x44, 0xd8, 0xc9, 0xf4,
	0x61, 0x67, 0x62, 0xb6, 0xf8, 0x43, 0x9c, 0x2d, 0xf0, 0x70, 0xb6, 0x58, 0x9f, 0xd5, 0xf6, 0xff,
	0x49, 0xc2, 0xd0, 0x3e, 0x06, 0x95, 0xfb, 0x23, 0x6e, 0x44, 0x2b, 0x53, 0x1a, 0xd1, 0x71, 0x8e,
	0xf9, 0x5a, 0x81, 0x6b, 0xc3, 0x1a, 0xcb, 0x0c, 0x70, 0x2d, 0xbc, 0x05, 0xf0, 0x7a, 0x97, 0x50,
	0xd8, 0x33, 0x6f, 0x59, 0xd8, 0xd1, 0x22, 0xe4, 0x19, 0x32, 0x89, 0x25, 0xde, 0xcf, 0x1c, 0x19,
	0x7c, 0x1c, 0xeb, 0xf7, 0x0f, 0x05, 0x16, 0x9a, 0xee, 0x2b, 0xe2, 0x34, 0x7d, 0xd3, 0x09, 0x3c,
	0xd7, 0xe7, 0xa7, 0x74, 0xec, 0x5a, 0xbd, 0xb0, 0x0c, 0xb3, 0x6f, 0x74, 0x0b, 0x4a, 0x81, 0x7d,
	0xea, 0x98, 0xb4, 0xeb, 0x13, 0xe9, 0xcb, 0x78, 0x02, 0x5d, 0x85, 0xfc, 0x2b, 0xd2, 0x63, 0x88,
	0xc8, 0x8a, 0xfb, 0xef, 0x2b, 0xd2, 0xab, 0x59, 0xa8, 0x0e, 0xc5, 0x0e, 0xa1, 0x26, 0xf7, 0x7f,
	0x8e, 0x47, 0x6b, 0xa2, 0x2d, 0x83, 0xdb, 0x1b, 0xcf, 0x25, 0x8b, 0x88, 0xdd, 0x48, 0x82, 0xf6,
	0x18, 0xe6, 0x07, 0x96, 0x66, 0x7a, 0xe2, 0xfd, 0x51, 0x01, 0x95, 0xef, 0xc3, 0xac, 0xeb, 0x06,
	0xc4, 0x97, 0x6c, 0xfc, 0x1b, 0xdd, 0x80, 0x22, 0x65, 0x8b, 0x61, 0x16, 0x9f, 0xc3, 0x05, 0x3e,
	0xae, 0x59, 0xe8, 0x31, 0x94, 0xcf, 0xcd, 0xb6, 0x6d, 0x1d, 0x75, 0x1d, 0x6a, 0xb7, 0xa3, 0x77,
	0xf6, 0xf8, 0x5b, 0x25, 0x70, 0xf2, 0x03, 0x46, 0xcd, 0x9b, 0x14, 0xee, 0xa9, 0xed, 0xf0, 0xf8,
	0x2b, 0x62, 0x31, 0x60, 0xf5, 0xdf, 0x76, 0xce, 0x6d, 0x2a, 0xfe, 0x62, 0x28, 0x62, 0x39, 0x5a,
	0xfb, 0x6b, 0x19, 0x8a, 0x2f, 0xa4, 0x53, 0x50, 0x1d, 0x20, 0xee, 0x70, 0xa3, 0x6b, 0x23, 0x1b,
	0x56, 0x3b, 0xec, 0xea, 0xf4, 0xd1, 0xb8, 0xee, 0xca, 0x50, 0x67, 0xfc, 0x25, 0x5c, 0x4e, 0x68,
	0x55, 0x8e, 0x15, 0xbb, 0x32, 0x4e, 0xec, 0xb8, 0x5e, 0xe7, 0x2f, 0xe1, 0xbd, 0xa1, 0x06, 0x0a,
	0xba, 0x97, 0xbe, 0xf1, 0xa3, 0xdd, 0x4f, 0x45, 0x2b, 0xf7, 0x3a, 0x84, 0xf9, 0x81, 0x4e, 0x1d,
	0x5a, 0x4e, 0xe2, 0x4e, 0x6a, 0xe6, 0x69, 0x53, 0xfa, 0x36, 0x68, 0x0b, 0x16, 0xd8, 0x93, 0xc8,
	0xa4, 0x44, 0x7a, 0x70, 0xac, 0x87, 0xc6, 0xff, 0xb5, 0x80, 0x0e, 0xe0, 0x7a, 0x24, 0x64, 0xa8,
	0x7b, 0x3b, 0x4e, 0x5a, 0x8a, 0xbe, 0x30, 0x7a, 0x01, 0x73, 0xfd, 0xcf, 0x35, 0x74, 0x67, 0x8c,
	0xd5, 0xc3, 0x0f, 0x3a, 0xed, 0xd6, 0xa4, 0x0a, 0xb9, 0xaa, 0x20, 0x0b, 0xde, 0xe3, 0xb7, 0xff,
	0x38, 0xa5, 0xa0, 0x0f, 0x53, 0xa5, 0x9c, 0x64, 0xf4, 0x8d, 0x5e, 0xe6, 0x96, 0x95, 0x55, 0x05,
	0xb9, 0x09, 0xf7, 0x95, 0xfb, 0xa9, 0xae, 0x3c, 0x72, 0xb3, 0xef, 0xa5, 0x23, 0x16, 0x5b, 0xae,
	0x2a, 0xe8, 0x05, 0x5c, 0x1e, 0xb8, 0x5e, 0x48, 0xd3, 0x3e, 0x9a, 0x2c, 0x26, 0xf4, 0x8b, 0x36,
	0xe6, 0xa8, 0x96, 0x15, 0xf4, 0x25, 0x5c, 0x19, 0x4c, 0xe8, 0x52, 0xf2, 0xdd, 0xd4, 0xc5, 0x4a,
	0xbb, 0x97, 0x86, 0xb4, 0xcf, 0x79, 0x2f, 0xa1, 0xdc, 0xf7, 0xb7, 0x59, 0xb2, 0x0d, 0xa3, 0x7f,
	0xcf, 0x69, 0x77, 0xa6, 0xd2, 0xc9, 0x90, 0xea, 0x85, 0x4d, 0xac, 0x21, 0xcc, 0xad, 0x8c, 0x17,
	0x90, 0xf8, 0x97, 0x8d, 0xb6, 0x9a, 0x9e, 0x41, 0x6e, 0xdd, 0x81, 0xca, 0x70, 0x7f, 0x3b, 0x19,
	0x17, 0x63, 0x1a, 0xec, 0xc9, 0xb8, 0x18, 0xdb, 0x32, 0xb7, 0x60, 0x7e, 0xa0, 0xbf, 0x96, 0x9c,
	0x3c, 0x92, 0x3a, 0x7a, 0xda, 0xdd, 0x14, 0x94, 0x62, 0x97, 0xe3, 0x3c, 0x07, 0xcd, 0x0f, 0xfe,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0x26, 0x9f, 0x0a, 0x4e, 0x34, 0x20, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WaypointClient is the client API for Waypoint service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WaypointClient interface {
	// ListBuilds returns the builds.
	ListBuilds(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListBuildsResponse, error)
	// ListPushedArtifacts returns the builds.
	ListPushedArtifacts(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListPushedArtifactsResponse, error)
	// ListDeployments returns the deployments.
	ListDeployments(ctx context.Context, in *ListDeploymentsRequest, opts ...grpc.CallOption) (*ListDeploymentsResponse, error)
	// GetDeployment returns a deployment
	GetDeployment(ctx context.Context, in *GetDeploymentRequest, opts ...grpc.CallOption) (*Deployment, error)
	// GetLatestBuild returns the most recent successfully completed build
	// for an app.
	GetLatestBuild(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Build, error)
	// GetLatestPushedArtifact returns the most recent successfully completed
	// artifact push for an app.
	GetLatestPushedArtifact(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PushedArtifact, error)
	// GetLogStream reads the log stream for a deployment. This will immediately
	// send a single LogEntry with the lines we have so far. If there are no
	// available lines this will NOT block and instead will return an error.
	// The client can choose to retry or not.
	GetLogStream(ctx context.Context, in *GetLogStreamRequest, opts ...grpc.CallOption) (Waypoint_GetLogStreamClient, error)
	// StartExecStream starts an exec session.
	StartExecStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_StartExecStreamClient, error)
	// EntrypointConfig is called to get the configuration for the entrypoint
	// and also to get any potential updates.
	//
	// This endpoint also registers the instance with the server. This MUST be
	// called first otherwise other RPCs related to the entrypoint may fail
	// with FailedPrecondition.
	EntrypointConfig(ctx context.Context, in *EntrypointConfigRequest, opts ...grpc.CallOption) (Waypoint_EntrypointConfigClient, error)
	// EntrypointLogStream is called to open the stream that logs are sent to.
	EntrypointLogStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_EntrypointLogStreamClient, error)
	// EntrypointExecStream is called to open the data stream for the exec session.
	EntrypointExecStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_EntrypointExecStreamClient, error)
	// UpsertBuild updates or inserts a build. A build is responsible for
	// taking some set of source information and turning it into an initial
	// artifact. This artifact is considered "local" until it is pushed.
	UpsertBuild(ctx context.Context, in *UpsertBuildRequest, opts ...grpc.CallOption) (*UpsertBuildResponse, error)
	// UpsertPushedArtifact updates or inserts a pushed artifact. This is
	// useful for local operations to work on a pushed artifact.
	UpsertPushedArtifact(ctx context.Context, in *UpsertPushedArtifactRequest, opts ...grpc.CallOption) (*UpsertPushedArtifactResponse, error)
	// UpsertDeployment updates or inserts a deployment.
	UpsertDeployment(ctx context.Context, in *UpsertDeploymentRequest, opts ...grpc.CallOption) (*UpsertDeploymentResponse, error)
	// UpsertRelease updates or inserts a release.
	UpsertRelease(ctx context.Context, in *UpsertReleaseRequest, opts ...grpc.CallOption) (*UpsertReleaseResponse, error)
}

type waypointClient struct {
	cc grpc.ClientConnInterface
}

func NewWaypointClient(cc grpc.ClientConnInterface) WaypointClient {
	return &waypointClient{cc}
}

func (c *waypointClient) ListBuilds(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListBuildsResponse, error) {
	out := new(ListBuildsResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/ListBuilds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) ListPushedArtifacts(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListPushedArtifactsResponse, error) {
	out := new(ListPushedArtifactsResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/ListPushedArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) ListDeployments(ctx context.Context, in *ListDeploymentsRequest, opts ...grpc.CallOption) (*ListDeploymentsResponse, error) {
	out := new(ListDeploymentsResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/ListDeployments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetDeployment(ctx context.Context, in *GetDeploymentRequest, opts ...grpc.CallOption) (*Deployment, error) {
	out := new(Deployment)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GetDeployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetLatestBuild(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Build, error) {
	out := new(Build)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GetLatestBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetLatestPushedArtifact(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PushedArtifact, error) {
	out := new(PushedArtifact)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GetLatestPushedArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetLogStream(ctx context.Context, in *GetLogStreamRequest, opts ...grpc.CallOption) (Waypoint_GetLogStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[0], "/hashicorp.waypoint.Waypoint/GetLogStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointGetLogStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Waypoint_GetLogStreamClient interface {
	Recv() (*LogBatch, error)
	grpc.ClientStream
}

type waypointGetLogStreamClient struct {
	grpc.ClientStream
}

func (x *waypointGetLogStreamClient) Recv() (*LogBatch, error) {
	m := new(LogBatch)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) StartExecStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_StartExecStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[1], "/hashicorp.waypoint.Waypoint/StartExecStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointStartExecStreamClient{stream}
	return x, nil
}

type Waypoint_StartExecStreamClient interface {
	Send(*ExecStreamRequest) error
	Recv() (*ExecStreamResponse, error)
	grpc.ClientStream
}

type waypointStartExecStreamClient struct {
	grpc.ClientStream
}

func (x *waypointStartExecStreamClient) Send(m *ExecStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *waypointStartExecStreamClient) Recv() (*ExecStreamResponse, error) {
	m := new(ExecStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) EntrypointConfig(ctx context.Context, in *EntrypointConfigRequest, opts ...grpc.CallOption) (Waypoint_EntrypointConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[2], "/hashicorp.waypoint.Waypoint/EntrypointConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointEntrypointConfigClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Waypoint_EntrypointConfigClient interface {
	Recv() (*EntrypointConfigResponse, error)
	grpc.ClientStream
}

type waypointEntrypointConfigClient struct {
	grpc.ClientStream
}

func (x *waypointEntrypointConfigClient) Recv() (*EntrypointConfigResponse, error) {
	m := new(EntrypointConfigResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) EntrypointLogStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_EntrypointLogStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[3], "/hashicorp.waypoint.Waypoint/EntrypointLogStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointEntrypointLogStreamClient{stream}
	return x, nil
}

type Waypoint_EntrypointLogStreamClient interface {
	Send(*EntrypointLogBatch) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type waypointEntrypointLogStreamClient struct {
	grpc.ClientStream
}

func (x *waypointEntrypointLogStreamClient) Send(m *EntrypointLogBatch) error {
	return x.ClientStream.SendMsg(m)
}

func (x *waypointEntrypointLogStreamClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) EntrypointExecStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_EntrypointExecStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[4], "/hashicorp.waypoint.Waypoint/EntrypointExecStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointEntrypointExecStreamClient{stream}
	return x, nil
}

type Waypoint_EntrypointExecStreamClient interface {
	Send(*EntrypointExecRequest) error
	Recv() (*EntrypointExecResponse, error)
	grpc.ClientStream
}

type waypointEntrypointExecStreamClient struct {
	grpc.ClientStream
}

func (x *waypointEntrypointExecStreamClient) Send(m *EntrypointExecRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *waypointEntrypointExecStreamClient) Recv() (*EntrypointExecResponse, error) {
	m := new(EntrypointExecResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) UpsertBuild(ctx context.Context, in *UpsertBuildRequest, opts ...grpc.CallOption) (*UpsertBuildResponse, error) {
	out := new(UpsertBuildResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/UpsertBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) UpsertPushedArtifact(ctx context.Context, in *UpsertPushedArtifactRequest, opts ...grpc.CallOption) (*UpsertPushedArtifactResponse, error) {
	out := new(UpsertPushedArtifactResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/UpsertPushedArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) UpsertDeployment(ctx context.Context, in *UpsertDeploymentRequest, opts ...grpc.CallOption) (*UpsertDeploymentResponse, error) {
	out := new(UpsertDeploymentResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/UpsertDeployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) UpsertRelease(ctx context.Context, in *UpsertReleaseRequest, opts ...grpc.CallOption) (*UpsertReleaseResponse, error) {
	out := new(UpsertReleaseResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/UpsertRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WaypointServer is the server API for Waypoint service.
type WaypointServer interface {
	// ListBuilds returns the builds.
	ListBuilds(context.Context, *empty.Empty) (*ListBuildsResponse, error)
	// ListPushedArtifacts returns the builds.
	ListPushedArtifacts(context.Context, *empty.Empty) (*ListPushedArtifactsResponse, error)
	// ListDeployments returns the deployments.
	ListDeployments(context.Context, *ListDeploymentsRequest) (*ListDeploymentsResponse, error)
	// GetDeployment returns a deployment
	GetDeployment(context.Context, *GetDeploymentRequest) (*Deployment, error)
	// GetLatestBuild returns the most recent successfully completed build
	// for an app.
	GetLatestBuild(context.Context, *empty.Empty) (*Build, error)
	// GetLatestPushedArtifact returns the most recent successfully completed
	// artifact push for an app.
	GetLatestPushedArtifact(context.Context, *empty.Empty) (*PushedArtifact, error)
	// GetLogStream reads the log stream for a deployment. This will immediately
	// send a single LogEntry with the lines we have so far. If there are no
	// available lines this will NOT block and instead will return an error.
	// The client can choose to retry or not.
	GetLogStream(*GetLogStreamRequest, Waypoint_GetLogStreamServer) error
	// StartExecStream starts an exec session.
	StartExecStream(Waypoint_StartExecStreamServer) error
	// EntrypointConfig is called to get the configuration for the entrypoint
	// and also to get any potential updates.
	//
	// This endpoint also registers the instance with the server. This MUST be
	// called first otherwise other RPCs related to the entrypoint may fail
	// with FailedPrecondition.
	EntrypointConfig(*EntrypointConfigRequest, Waypoint_EntrypointConfigServer) error
	// EntrypointLogStream is called to open the stream that logs are sent to.
	EntrypointLogStream(Waypoint_EntrypointLogStreamServer) error
	// EntrypointExecStream is called to open the data stream for the exec session.
	EntrypointExecStream(Waypoint_EntrypointExecStreamServer) error
	// UpsertBuild updates or inserts a build. A build is responsible for
	// taking some set of source information and turning it into an initial
	// artifact. This artifact is considered "local" until it is pushed.
	UpsertBuild(context.Context, *UpsertBuildRequest) (*UpsertBuildResponse, error)
	// UpsertPushedArtifact updates or inserts a pushed artifact. This is
	// useful for local operations to work on a pushed artifact.
	UpsertPushedArtifact(context.Context, *UpsertPushedArtifactRequest) (*UpsertPushedArtifactResponse, error)
	// UpsertDeployment updates or inserts a deployment.
	UpsertDeployment(context.Context, *UpsertDeploymentRequest) (*UpsertDeploymentResponse, error)
	// UpsertRelease updates or inserts a release.
	UpsertRelease(context.Context, *UpsertReleaseRequest) (*UpsertReleaseResponse, error)
}

// UnimplementedWaypointServer can be embedded to have forward compatible implementations.
type UnimplementedWaypointServer struct {
}

func (*UnimplementedWaypointServer) ListBuilds(ctx context.Context, req *empty.Empty) (*ListBuildsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListBuilds not implemented")
}
func (*UnimplementedWaypointServer) ListPushedArtifacts(ctx context.Context, req *empty.Empty) (*ListPushedArtifactsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListPushedArtifacts not implemented")
}
func (*UnimplementedWaypointServer) ListDeployments(ctx context.Context, req *ListDeploymentsRequest) (*ListDeploymentsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListDeployments not implemented")
}
func (*UnimplementedWaypointServer) GetDeployment(ctx context.Context, req *GetDeploymentRequest) (*Deployment, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetDeployment not implemented")
}
func (*UnimplementedWaypointServer) GetLatestBuild(ctx context.Context, req *empty.Empty) (*Build, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetLatestBuild not implemented")
}
func (*UnimplementedWaypointServer) GetLatestPushedArtifact(ctx context.Context, req *empty.Empty) (*PushedArtifact, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetLatestPushedArtifact not implemented")
}
func (*UnimplementedWaypointServer) GetLogStream(req *GetLogStreamRequest, srv Waypoint_GetLogStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method GetLogStream not implemented")
}
func (*UnimplementedWaypointServer) StartExecStream(srv Waypoint_StartExecStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method StartExecStream not implemented")
}
func (*UnimplementedWaypointServer) EntrypointConfig(req *EntrypointConfigRequest, srv Waypoint_EntrypointConfigServer) error {
	return status1.Errorf(codes.Unimplemented, "method EntrypointConfig not implemented")
}
func (*UnimplementedWaypointServer) EntrypointLogStream(srv Waypoint_EntrypointLogStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method EntrypointLogStream not implemented")
}
func (*UnimplementedWaypointServer) EntrypointExecStream(srv Waypoint_EntrypointExecStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method EntrypointExecStream not implemented")
}
func (*UnimplementedWaypointServer) UpsertBuild(ctx context.Context, req *UpsertBuildRequest) (*UpsertBuildResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpsertBuild not implemented")
}
func (*UnimplementedWaypointServer) UpsertPushedArtifact(ctx context.Context, req *UpsertPushedArtifactRequest) (*UpsertPushedArtifactResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpsertPushedArtifact not implemented")
}
func (*UnimplementedWaypointServer) UpsertDeployment(ctx context.Context, req *UpsertDeploymentRequest) (*UpsertDeploymentResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpsertDeployment not implemented")
}
func (*UnimplementedWaypointServer) UpsertRelease(ctx context.Context, req *UpsertReleaseRequest) (*UpsertReleaseResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpsertRelease not implemented")
}

func RegisterWaypointServer(s *grpc.Server, srv WaypointServer) {
	s.RegisterService(&_Waypoint_serviceDesc, srv)
}

func _Waypoint_ListBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).ListBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/ListBuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).ListBuilds(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_ListPushedArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).ListPushedArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/ListPushedArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).ListPushedArtifacts(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_ListDeployments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeploymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).ListDeployments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/ListDeployments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).ListDeployments(ctx, req.(*ListDeploymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GetDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GetDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GetDeployment(ctx, req.(*GetDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetLatestBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GetLatestBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GetLatestBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GetLatestBuild(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetLatestPushedArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GetLatestPushedArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GetLatestPushedArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GetLatestPushedArtifact(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetLogStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetLogStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WaypointServer).GetLogStream(m, &waypointGetLogStreamServer{stream})
}

type Waypoint_GetLogStreamServer interface {
	Send(*LogBatch) error
	grpc.ServerStream
}

type waypointGetLogStreamServer struct {
	grpc.ServerStream
}

func (x *waypointGetLogStreamServer) Send(m *LogBatch) error {
	return x.ServerStream.SendMsg(m)
}

func _Waypoint_StartExecStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WaypointServer).StartExecStream(&waypointStartExecStreamServer{stream})
}

type Waypoint_StartExecStreamServer interface {
	Send(*ExecStreamResponse) error
	Recv() (*ExecStreamRequest, error)
	grpc.ServerStream
}

type waypointStartExecStreamServer struct {
	grpc.ServerStream
}

func (x *waypointStartExecStreamServer) Send(m *ExecStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *waypointStartExecStreamServer) Recv() (*ExecStreamRequest, error) {
	m := new(ExecStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Waypoint_EntrypointConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EntrypointConfigRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WaypointServer).EntrypointConfig(m, &waypointEntrypointConfigServer{stream})
}

type Waypoint_EntrypointConfigServer interface {
	Send(*EntrypointConfigResponse) error
	grpc.ServerStream
}

type waypointEntrypointConfigServer struct {
	grpc.ServerStream
}

func (x *waypointEntrypointConfigServer) Send(m *EntrypointConfigResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Waypoint_EntrypointLogStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WaypointServer).EntrypointLogStream(&waypointEntrypointLogStreamServer{stream})
}

type Waypoint_EntrypointLogStreamServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*EntrypointLogBatch, error)
	grpc.ServerStream
}

type waypointEntrypointLogStreamServer struct {
	grpc.ServerStream
}

func (x *waypointEntrypointLogStreamServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *waypointEntrypointLogStreamServer) Recv() (*EntrypointLogBatch, error) {
	m := new(EntrypointLogBatch)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Waypoint_EntrypointExecStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WaypointServer).EntrypointExecStream(&waypointEntrypointExecStreamServer{stream})
}

type Waypoint_EntrypointExecStreamServer interface {
	Send(*EntrypointExecResponse) error
	Recv() (*EntrypointExecRequest, error)
	grpc.ServerStream
}

type waypointEntrypointExecStreamServer struct {
	grpc.ServerStream
}

func (x *waypointEntrypointExecStreamServer) Send(m *EntrypointExecResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *waypointEntrypointExecStreamServer) Recv() (*EntrypointExecRequest, error) {
	m := new(EntrypointExecRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Waypoint_UpsertBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).UpsertBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/UpsertBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).UpsertBuild(ctx, req.(*UpsertBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_UpsertPushedArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPushedArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).UpsertPushedArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/UpsertPushedArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).UpsertPushedArtifact(ctx, req.(*UpsertPushedArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_UpsertDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).UpsertDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/UpsertDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).UpsertDeployment(ctx, req.(*UpsertDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_UpsertRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).UpsertRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/UpsertRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).UpsertRelease(ctx, req.(*UpsertReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Waypoint_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hashicorp.waypoint.Waypoint",
	HandlerType: (*WaypointServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListBuilds",
			Handler:    _Waypoint_ListBuilds_Handler,
		},
		{
			MethodName: "ListPushedArtifacts",
			Handler:    _Waypoint_ListPushedArtifacts_Handler,
		},
		{
			MethodName: "ListDeployments",
			Handler:    _Waypoint_ListDeployments_Handler,
		},
		{
			MethodName: "GetDeployment",
			Handler:    _Waypoint_GetDeployment_Handler,
		},
		{
			MethodName: "GetLatestBuild",
			Handler:    _Waypoint_GetLatestBuild_Handler,
		},
		{
			MethodName: "GetLatestPushedArtifact",
			Handler:    _Waypoint_GetLatestPushedArtifact_Handler,
		},
		{
			MethodName: "UpsertBuild",
			Handler:    _Waypoint_UpsertBuild_Handler,
		},
		{
			MethodName: "UpsertPushedArtifact",
			Handler:    _Waypoint_UpsertPushedArtifact_Handler,
		},
		{
			MethodName: "UpsertDeployment",
			Handler:    _Waypoint_UpsertDeployment_Handler,
		},
		{
			MethodName: "UpsertRelease",
			Handler:    _Waypoint_UpsertRelease_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetLogStream",
			Handler:       _Waypoint_GetLogStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StartExecStream",
			Handler:       _Waypoint_StartExecStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "EntrypointConfig",
			Handler:       _Waypoint_EntrypointConfig_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EntrypointLogStream",
			Handler:       _Waypoint_EntrypointLogStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "EntrypointExecStream",
			Handler:       _Waypoint_EntrypointExecStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "server.proto",
}
