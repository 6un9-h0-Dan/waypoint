// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package hashicorp_devflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import status "google.golang.org/genproto/googleapis/rpc/status"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Supported component types, the values here MUST match the enum values
// in the Go sdk/component package exactly. A test in internal/server
// validates this.
type Component_Type int32

const (
	Component_UNKNOWN  Component_Type = 0
	Component_BUILDER  Component_Type = 1
	Component_REGISTRY Component_Type = 2
)

var Component_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "BUILDER",
	2: "REGISTRY",
}
var Component_Type_value = map[string]int32{
	"UNKNOWN":  0,
	"BUILDER":  1,
	"REGISTRY": 2,
}

func (x Component_Type) String() string {
	return proto.EnumName(Component_Type_name, int32(x))
}
func (Component_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{0, 0}
}

type Status_State int32

const (
	Status_UNKNOWN Status_State = 0
	Status_RUNNING Status_State = 1
	Status_SUCCESS Status_State = 2
	Status_ERROR   Status_State = 3
)

var Status_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "RUNNING",
	2: "SUCCESS",
	3: "ERROR",
}
var Status_State_value = map[string]int32{
	"UNKNOWN": 0,
	"RUNNING": 1,
	"SUCCESS": 2,
	"ERROR":   3,
}

func (x Status_State) String() string {
	return proto.EnumName(Status_State_name, int32(x))
}
func (Status_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{1, 0}
}

// Component represents metadata about a component. A component is the
// generic name for a builder, registry, platform, etc.
type Component struct {
	// type of the component
	Type Component_Type `protobuf:"varint,1,opt,name=type,proto3,enum=hashicorp.devflow.Component_Type" json:"type,omitempty"`
	// name of the component
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Component) Reset()         { *m = Component{} }
func (m *Component) String() string { return proto.CompactTextString(m) }
func (*Component) ProtoMessage()    {}
func (*Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{0}
}
func (m *Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Component.Unmarshal(m, b)
}
func (m *Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Component.Marshal(b, m, deterministic)
}
func (dst *Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Component.Merge(dst, src)
}
func (m *Component) XXX_Size() int {
	return xxx_messageInfo_Component.Size(m)
}
func (m *Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Component proto.InternalMessageInfo

func (m *Component) GetType() Component_Type {
	if m != nil {
		return m.Type
	}
	return Component_UNKNOWN
}

func (m *Component) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Status represents the status of an async operation.
type Status struct {
	// state is the state of this operation.
	State Status_State `protobuf:"varint,1,opt,name=state,proto3,enum=hashicorp.devflow.Status_State" json:"state,omitempty"`
	// details may be non-empty to provide human-friendly information
	// about the current status. This may change between status updates
	// for the same state to provide updated details about the state.
	Details string `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	// error is set if the state == ERROR with the error that occurred.
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// start_time is the time the operation was started.
	StartTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// complete_time is the time the operation completed (success or fail).
	CompleteTime         *timestamp.Timestamp `protobuf:"bytes,5,opt,name=complete_time,json=completeTime,proto3" json:"complete_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{1}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (dst *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(dst, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetState() Status_State {
	if m != nil {
		return m.State
	}
	return Status_UNKNOWN
}

func (m *Status) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Status) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Status) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Status) GetCompleteTime() *timestamp.Timestamp {
	if m != nil {
		return m.CompleteTime
	}
	return nil
}

type UpsertBuildRequest struct {
	// Build to upsert. If an ID is not set, this will be an insert operation.
	// If the ID is set, that build is updated. It is an error if an update
	// is requested on a non-existent build.
	Build                *Build   `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertBuildRequest) Reset()         { *m = UpsertBuildRequest{} }
func (m *UpsertBuildRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertBuildRequest) ProtoMessage()    {}
func (*UpsertBuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{2}
}
func (m *UpsertBuildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertBuildRequest.Unmarshal(m, b)
}
func (m *UpsertBuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertBuildRequest.Marshal(b, m, deterministic)
}
func (dst *UpsertBuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertBuildRequest.Merge(dst, src)
}
func (m *UpsertBuildRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertBuildRequest.Size(m)
}
func (m *UpsertBuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertBuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertBuildRequest proto.InternalMessageInfo

func (m *UpsertBuildRequest) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

type UpsertBuildResponse struct {
	Build                *Build   `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertBuildResponse) Reset()         { *m = UpsertBuildResponse{} }
func (m *UpsertBuildResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertBuildResponse) ProtoMessage()    {}
func (*UpsertBuildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{3}
}
func (m *UpsertBuildResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertBuildResponse.Unmarshal(m, b)
}
func (m *UpsertBuildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertBuildResponse.Marshal(b, m, deterministic)
}
func (dst *UpsertBuildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertBuildResponse.Merge(dst, src)
}
func (m *UpsertBuildResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertBuildResponse.Size(m)
}
func (m *UpsertBuildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertBuildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertBuildResponse proto.InternalMessageInfo

func (m *UpsertBuildResponse) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

type ListBuildsResponse struct {
	// builds is the list of builds.
	Builds               []*Build `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBuildsResponse) Reset()         { *m = ListBuildsResponse{} }
func (m *ListBuildsResponse) String() string { return proto.CompactTextString(m) }
func (*ListBuildsResponse) ProtoMessage()    {}
func (*ListBuildsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{4}
}
func (m *ListBuildsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBuildsResponse.Unmarshal(m, b)
}
func (m *ListBuildsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBuildsResponse.Marshal(b, m, deterministic)
}
func (dst *ListBuildsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBuildsResponse.Merge(dst, src)
}
func (m *ListBuildsResponse) XXX_Size() int {
	return xxx_messageInfo_ListBuildsResponse.Size(m)
}
func (m *ListBuildsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBuildsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBuildsResponse proto.InternalMessageInfo

func (m *ListBuildsResponse) GetBuilds() []*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

// Build represents a process of creating an artifact that can be in any state,
// such as complete. A successful complete build produces an artifact.
type Build struct {
	// id is the unique ID of the build
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// status of the build
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// component is the component that was used for this build
	Component *Component `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	// artifact is the result of the build if the status.state == SUCCESS
	Artifact             *Artifact `protobuf:"bytes,4,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{5}
}
func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (dst *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(dst, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Build) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Build) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Build) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

// Artifact is the result of a build or registry. This is the metadata only.
// The binary contents of an artifact are expected to be stored in a registry.
type Artifact struct {
	// artifact is the full artifact encoded directly from the component plugin.
	// The receiving end must have access to the component proto files to
	// know how to decode this.
	Artifact             *any.Any `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{6}
}
func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (dst *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(dst, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetArtifact() *any.Any {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type UpsertPushedArtifactRequest struct {
	// artifact to upsert. If the id in the artifact is empty, then this
	// will be an insert. Otherwise, this will be an update and if the ID
	// isn't found, it will be an error.
	Artifact             *PushedArtifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpsertPushedArtifactRequest) Reset()         { *m = UpsertPushedArtifactRequest{} }
func (m *UpsertPushedArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertPushedArtifactRequest) ProtoMessage()    {}
func (*UpsertPushedArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{7}
}
func (m *UpsertPushedArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPushedArtifactRequest.Unmarshal(m, b)
}
func (m *UpsertPushedArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPushedArtifactRequest.Marshal(b, m, deterministic)
}
func (dst *UpsertPushedArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPushedArtifactRequest.Merge(dst, src)
}
func (m *UpsertPushedArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertPushedArtifactRequest.Size(m)
}
func (m *UpsertPushedArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPushedArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPushedArtifactRequest proto.InternalMessageInfo

func (m *UpsertPushedArtifactRequest) GetArtifact() *PushedArtifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type UpsertPushedArtifactResponse struct {
	// resulting push object, you should replace this with what was sent
	// since the update operation may touch up the input data (i.e. update
	// timestamps)
	Artifact             *PushedArtifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpsertPushedArtifactResponse) Reset()         { *m = UpsertPushedArtifactResponse{} }
func (m *UpsertPushedArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertPushedArtifactResponse) ProtoMessage()    {}
func (*UpsertPushedArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{8}
}
func (m *UpsertPushedArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPushedArtifactResponse.Unmarshal(m, b)
}
func (m *UpsertPushedArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPushedArtifactResponse.Marshal(b, m, deterministic)
}
func (dst *UpsertPushedArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPushedArtifactResponse.Merge(dst, src)
}
func (m *UpsertPushedArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertPushedArtifactResponse.Size(m)
}
func (m *UpsertPushedArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPushedArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPushedArtifactResponse proto.InternalMessageInfo

func (m *UpsertPushedArtifactResponse) GetArtifact() *PushedArtifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type PushedArtifact struct {
	// id is a unique ID for this push
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// status of the push operation
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// component that pushed this artifact
	Component *Component `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	// artifact is the artifact that was a result from the push.
	Artifact *Artifact `protobuf:"bytes,4,opt,name=artifact,proto3" json:"artifact,omitempty"`
	// the id of the build that this pushed artifact was sourced from.
	BuildId              string   `protobuf:"bytes,5,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushedArtifact) Reset()         { *m = PushedArtifact{} }
func (m *PushedArtifact) String() string { return proto.CompactTextString(m) }
func (*PushedArtifact) ProtoMessage()    {}
func (*PushedArtifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{9}
}
func (m *PushedArtifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushedArtifact.Unmarshal(m, b)
}
func (m *PushedArtifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushedArtifact.Marshal(b, m, deterministic)
}
func (dst *PushedArtifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushedArtifact.Merge(dst, src)
}
func (m *PushedArtifact) XXX_Size() int {
	return xxx_messageInfo_PushedArtifact.Size(m)
}
func (m *PushedArtifact) XXX_DiscardUnknown() {
	xxx_messageInfo_PushedArtifact.DiscardUnknown(m)
}

var xxx_messageInfo_PushedArtifact proto.InternalMessageInfo

func (m *PushedArtifact) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PushedArtifact) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PushedArtifact) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *PushedArtifact) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

func (m *PushedArtifact) GetBuildId() string {
	if m != nil {
		return m.BuildId
	}
	return ""
}

type UpsertDeploymentRequest struct {
	// deployment to upsert. If the id in the artifact is empty, then this
	// will be an insert. Otherwise, this will be an update and if the ID
	// isn't found, it will be an error.
	Deployment           *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpsertDeploymentRequest) Reset()         { *m = UpsertDeploymentRequest{} }
func (m *UpsertDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertDeploymentRequest) ProtoMessage()    {}
func (*UpsertDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{10}
}
func (m *UpsertDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertDeploymentRequest.Unmarshal(m, b)
}
func (m *UpsertDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertDeploymentRequest.Marshal(b, m, deterministic)
}
func (dst *UpsertDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertDeploymentRequest.Merge(dst, src)
}
func (m *UpsertDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertDeploymentRequest.Size(m)
}
func (m *UpsertDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertDeploymentRequest proto.InternalMessageInfo

func (m *UpsertDeploymentRequest) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

type UpsertDeploymentResponse struct {
	// resulting object, you should replace this with what was sent in the request
	// since the update operation may touch up the input data (i.e. update
	// timestamps)
	Deployment           *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpsertDeploymentResponse) Reset()         { *m = UpsertDeploymentResponse{} }
func (m *UpsertDeploymentResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertDeploymentResponse) ProtoMessage()    {}
func (*UpsertDeploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{11}
}
func (m *UpsertDeploymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertDeploymentResponse.Unmarshal(m, b)
}
func (m *UpsertDeploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertDeploymentResponse.Marshal(b, m, deterministic)
}
func (dst *UpsertDeploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertDeploymentResponse.Merge(dst, src)
}
func (m *UpsertDeploymentResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertDeploymentResponse.Size(m)
}
func (m *UpsertDeploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertDeploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertDeploymentResponse proto.InternalMessageInfo

func (m *UpsertDeploymentResponse) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

type Deployment struct {
	// id is the unique ID for this deployment
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// status of the deployment
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// component that initiated this deployment
	Component *Component `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	// ID of the PushedArtifact that was deployed.
	ArtifactId string `protobuf:"bytes,4,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	// deployment is the full raw deployment object encoded directly from
	// the plugin. The client must have all the plugins setup to properly
	// decode this.
	Deployment           *any.Any `protobuf:"bytes,5,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Deployment) Reset()         { *m = Deployment{} }
func (m *Deployment) String() string { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()    {}
func (*Deployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_server_dc2b600e3217531a, []int{12}
}
func (m *Deployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deployment.Unmarshal(m, b)
}
func (m *Deployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deployment.Marshal(b, m, deterministic)
}
func (dst *Deployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deployment.Merge(dst, src)
}
func (m *Deployment) XXX_Size() int {
	return xxx_messageInfo_Deployment.Size(m)
}
func (m *Deployment) XXX_DiscardUnknown() {
	xxx_messageInfo_Deployment.DiscardUnknown(m)
}

var xxx_messageInfo_Deployment proto.InternalMessageInfo

func (m *Deployment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Deployment) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Deployment) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Deployment) GetArtifactId() string {
	if m != nil {
		return m.ArtifactId
	}
	return ""
}

func (m *Deployment) GetDeployment() *any.Any {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func init() {
	proto.RegisterType((*Component)(nil), "hashicorp.devflow.Component")
	proto.RegisterType((*Status)(nil), "hashicorp.devflow.Status")
	proto.RegisterType((*UpsertBuildRequest)(nil), "hashicorp.devflow.UpsertBuildRequest")
	proto.RegisterType((*UpsertBuildResponse)(nil), "hashicorp.devflow.UpsertBuildResponse")
	proto.RegisterType((*ListBuildsResponse)(nil), "hashicorp.devflow.ListBuildsResponse")
	proto.RegisterType((*Build)(nil), "hashicorp.devflow.Build")
	proto.RegisterType((*Artifact)(nil), "hashicorp.devflow.Artifact")
	proto.RegisterType((*UpsertPushedArtifactRequest)(nil), "hashicorp.devflow.UpsertPushedArtifactRequest")
	proto.RegisterType((*UpsertPushedArtifactResponse)(nil), "hashicorp.devflow.UpsertPushedArtifactResponse")
	proto.RegisterType((*PushedArtifact)(nil), "hashicorp.devflow.PushedArtifact")
	proto.RegisterType((*UpsertDeploymentRequest)(nil), "hashicorp.devflow.UpsertDeploymentRequest")
	proto.RegisterType((*UpsertDeploymentResponse)(nil), "hashicorp.devflow.UpsertDeploymentResponse")
	proto.RegisterType((*Deployment)(nil), "hashicorp.devflow.Deployment")
	proto.RegisterEnum("hashicorp.devflow.Component_Type", Component_Type_name, Component_Type_value)
	proto.RegisterEnum("hashicorp.devflow.Status_State", Status_State_name, Status_State_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DevflowClient is the client API for Devflow service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DevflowClient interface {
	// ListBuilds returns the builds.
	ListBuilds(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListBuildsResponse, error)
	// GetLatestBuild returns the most recent successfully completed build
	// for an app.
	GetLatestBuild(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Build, error)
	// UpsertBuild updates or inserts a build. A build is responsible for
	// taking some set of source information and turning it into an initial
	// artifact. This artifact is considered "local" until it is pushed.
	UpsertBuild(ctx context.Context, in *UpsertBuildRequest, opts ...grpc.CallOption) (*UpsertBuildResponse, error)
	// UpsertPushedArtifact updates or inserts a pushed artifact. This is
	// useful for local operations to work on a pushed artifact.
	UpsertPushedArtifact(ctx context.Context, in *UpsertPushedArtifactRequest, opts ...grpc.CallOption) (*UpsertPushedArtifactResponse, error)
	// UpsertDeployment updates or inserts a deployment.
	UpsertDeployment(ctx context.Context, in *UpsertDeploymentRequest, opts ...grpc.CallOption) (*UpsertDeploymentResponse, error)
}

type devflowClient struct {
	cc *grpc.ClientConn
}

func NewDevflowClient(cc *grpc.ClientConn) DevflowClient {
	return &devflowClient{cc}
}

func (c *devflowClient) ListBuilds(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListBuildsResponse, error) {
	out := new(ListBuildsResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.devflow.Devflow/ListBuilds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devflowClient) GetLatestBuild(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Build, error) {
	out := new(Build)
	err := c.cc.Invoke(ctx, "/hashicorp.devflow.Devflow/GetLatestBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devflowClient) UpsertBuild(ctx context.Context, in *UpsertBuildRequest, opts ...grpc.CallOption) (*UpsertBuildResponse, error) {
	out := new(UpsertBuildResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.devflow.Devflow/UpsertBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devflowClient) UpsertPushedArtifact(ctx context.Context, in *UpsertPushedArtifactRequest, opts ...grpc.CallOption) (*UpsertPushedArtifactResponse, error) {
	out := new(UpsertPushedArtifactResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.devflow.Devflow/UpsertPushedArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devflowClient) UpsertDeployment(ctx context.Context, in *UpsertDeploymentRequest, opts ...grpc.CallOption) (*UpsertDeploymentResponse, error) {
	out := new(UpsertDeploymentResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.devflow.Devflow/UpsertDeployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DevflowServer is the server API for Devflow service.
type DevflowServer interface {
	// ListBuilds returns the builds.
	ListBuilds(context.Context, *empty.Empty) (*ListBuildsResponse, error)
	// GetLatestBuild returns the most recent successfully completed build
	// for an app.
	GetLatestBuild(context.Context, *empty.Empty) (*Build, error)
	// UpsertBuild updates or inserts a build. A build is responsible for
	// taking some set of source information and turning it into an initial
	// artifact. This artifact is considered "local" until it is pushed.
	UpsertBuild(context.Context, *UpsertBuildRequest) (*UpsertBuildResponse, error)
	// UpsertPushedArtifact updates or inserts a pushed artifact. This is
	// useful for local operations to work on a pushed artifact.
	UpsertPushedArtifact(context.Context, *UpsertPushedArtifactRequest) (*UpsertPushedArtifactResponse, error)
	// UpsertDeployment updates or inserts a deployment.
	UpsertDeployment(context.Context, *UpsertDeploymentRequest) (*UpsertDeploymentResponse, error)
}

func RegisterDevflowServer(s *grpc.Server, srv DevflowServer) {
	s.RegisterService(&_Devflow_serviceDesc, srv)
}

func _Devflow_ListBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevflowServer).ListBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.devflow.Devflow/ListBuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevflowServer).ListBuilds(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devflow_GetLatestBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevflowServer).GetLatestBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.devflow.Devflow/GetLatestBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevflowServer).GetLatestBuild(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devflow_UpsertBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevflowServer).UpsertBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.devflow.Devflow/UpsertBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevflowServer).UpsertBuild(ctx, req.(*UpsertBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devflow_UpsertPushedArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPushedArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevflowServer).UpsertPushedArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.devflow.Devflow/UpsertPushedArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevflowServer).UpsertPushedArtifact(ctx, req.(*UpsertPushedArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devflow_UpsertDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevflowServer).UpsertDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.devflow.Devflow/UpsertDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevflowServer).UpsertDeployment(ctx, req.(*UpsertDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Devflow_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hashicorp.devflow.Devflow",
	HandlerType: (*DevflowServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListBuilds",
			Handler:    _Devflow_ListBuilds_Handler,
		},
		{
			MethodName: "GetLatestBuild",
			Handler:    _Devflow_GetLatestBuild_Handler,
		},
		{
			MethodName: "UpsertBuild",
			Handler:    _Devflow_UpsertBuild_Handler,
		},
		{
			MethodName: "UpsertPushedArtifact",
			Handler:    _Devflow_UpsertPushedArtifact_Handler,
		},
		{
			MethodName: "UpsertDeployment",
			Handler:    _Devflow_UpsertDeployment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_server_dc2b600e3217531a) }

var fileDescriptor_server_dc2b600e3217531a = []byte{
	// 758 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x95, 0xdf, 0x4e, 0x13, 0x41,
	0x14, 0xc6, 0xdd, 0xb6, 0xdb, 0x3f, 0xa7, 0xd8, 0xd4, 0x91, 0xc8, 0x52, 0x30, 0xd4, 0x4d, 0x34,
	0x8d, 0x26, 0x5b, 0xac, 0x12, 0x83, 0xd1, 0x18, 0xa0, 0x95, 0x34, 0x90, 0x62, 0xa6, 0x34, 0x4a,
	0x82, 0x21, 0x4b, 0x77, 0x80, 0x8d, 0x6d, 0x77, 0xdd, 0x99, 0x42, 0xfa, 0x02, 0x3e, 0x94, 0x37,
	0xbe, 0x89, 0x17, 0xfa, 0x22, 0x66, 0x67, 0x66, 0xb7, 0xa5, 0xbb, 0x05, 0x0c, 0x17, 0xc6, 0x2b,
	0x98, 0x39, 0xbf, 0xf3, 0xcd, 0xd9, 0xef, 0x9c, 0x99, 0xc2, 0x1c, 0x25, 0xde, 0x39, 0xf1, 0x0c,
	0xd7, 0x73, 0x98, 0x83, 0xee, 0x9d, 0x99, 0xf4, 0xcc, 0xee, 0x3a, 0x9e, 0x6b, 0x58, 0xe4, 0xfc,
	0xa4, 0xe7, 0x5c, 0x94, 0x16, 0x4f, 0x1d, 0xe7, 0xb4, 0x47, 0xaa, 0x1c, 0x38, 0x1e, 0x9e, 0x54,
	0xcd, 0xc1, 0x48, 0xd0, 0xa5, 0xa5, 0xe9, 0x10, 0xe9, 0xbb, 0x2c, 0x08, 0xae, 0x4c, 0x07, 0x99,
	0xdd, 0x27, 0x94, 0x99, 0x7d, 0x57, 0x02, 0x0b, 0x12, 0xf0, 0xdc, 0x6e, 0x95, 0x32, 0x93, 0x0d,
	0xa9, 0x08, 0xe8, 0xdf, 0x14, 0xc8, 0x6d, 0x39, 0x7d, 0xd7, 0x19, 0x90, 0x01, 0x43, 0x6b, 0x90,
	0x62, 0x23, 0x97, 0x68, 0x4a, 0x59, 0xa9, 0x14, 0x6a, 0x8f, 0x8c, 0x48, 0x85, 0x46, 0xc8, 0x1a,
	0xfb, 0x23, 0x97, 0x60, 0x8e, 0x23, 0x04, 0xa9, 0x81, 0xd9, 0x27, 0x5a, 0xa2, 0xac, 0x54, 0x72,
	0x98, 0xff, 0xaf, 0x1b, 0x90, 0xf2, 0x09, 0x94, 0x87, 0x4c, 0xa7, 0xb5, 0xd3, 0xda, 0xfb, 0xd8,
	0x2a, 0xde, 0xf1, 0x17, 0x9b, 0x9d, 0xe6, 0x6e, 0xbd, 0x81, 0x8b, 0x0a, 0x9a, 0x83, 0x2c, 0x6e,
	0x6c, 0x37, 0xdb, 0xfb, 0xf8, 0xa0, 0x98, 0xd0, 0xbf, 0x27, 0x20, 0xdd, 0xe6, 0x95, 0xa1, 0x35,
	0x50, 0xfd, 0x1a, 0x83, 0x32, 0x56, 0x62, 0xca, 0x10, 0x24, 0xff, 0x43, 0xb0, 0xa0, 0x91, 0x06,
	0x19, 0x8b, 0x30, 0xd3, 0xee, 0x51, 0x59, 0x48, 0xb0, 0x44, 0x15, 0x50, 0x89, 0xe7, 0x39, 0x9e,
	0x96, 0x2c, 0x2b, 0x95, 0x7c, 0x0d, 0x19, 0xc2, 0x0d, 0xc3, 0x73, 0xbb, 0x52, 0x09, 0x0b, 0x00,
	0xad, 0x03, 0x50, 0x66, 0x7a, 0xec, 0xc8, 0x37, 0x50, 0x4b, 0x71, 0xbc, 0x14, 0xe0, 0x81, 0xbb,
	0xc6, 0x7e, 0xe0, 0x2e, 0xce, 0x71, 0xda, 0x5f, 0xa3, 0x77, 0x70, 0xb7, 0xeb, 0xf4, 0xdd, 0x1e,
	0x61, 0x44, 0x64, 0xab, 0xd7, 0x66, 0xcf, 0x05, 0x09, 0xfe, 0x96, 0xbe, 0x0e, 0x2a, 0xff, 0x9e,
	0x88, 0x65, 0xb8, 0xd3, 0x6a, 0x35, 0x5b, 0xdb, 0x45, 0xc5, 0x5f, 0xb4, 0x3b, 0x5b, 0x5b, 0x8d,
	0x76, 0xbb, 0x98, 0x40, 0x39, 0x50, 0x1b, 0x18, 0xef, 0xe1, 0x62, 0x52, 0xaf, 0x03, 0xea, 0xb8,
	0x94, 0x78, 0x6c, 0x73, 0x68, 0xf7, 0x2c, 0x4c, 0xbe, 0x0e, 0x09, 0x65, 0xc8, 0x00, 0xf5, 0xd8,
	0x5f, 0x73, 0x1f, 0xf3, 0x35, 0x2d, 0xc6, 0x47, 0xc1, 0x0b, 0x4c, 0x6f, 0xc0, 0xfd, 0x4b, 0x2a,
	0xd4, 0x75, 0x06, 0x94, 0xfc, 0xb5, 0xcc, 0x7b, 0x40, 0xbb, 0x36, 0x15, 0x22, 0x34, 0x54, 0x59,
	0x85, 0x34, 0x0f, 0x53, 0x4d, 0x29, 0x27, 0xaf, 0x94, 0x91, 0x9c, 0xfe, 0x43, 0x01, 0x95, 0xef,
	0xa0, 0x02, 0x24, 0x6c, 0x71, 0x7c, 0x0e, 0x27, 0x6c, 0x0b, 0x3d, 0x87, 0xb4, 0x18, 0x62, 0xde,
	0xe8, 0x7c, 0x6d, 0x71, 0xe6, 0x84, 0x60, 0x09, 0xa2, 0xd7, 0x90, 0xeb, 0x06, 0xa3, 0x2b, 0xc7,
	0x60, 0xf9, 0xaa, 0xf1, 0xc6, 0x63, 0x1c, 0xbd, 0x82, 0xac, 0xe9, 0x31, 0xfb, 0xc4, 0xec, 0x32,
	0x39, 0x12, 0x4b, 0x31, 0xa9, 0x1b, 0x12, 0xc1, 0x21, 0xac, 0xbf, 0x81, 0x6c, 0xb0, 0x8b, 0x56,
	0x27, 0x44, 0x84, 0x91, 0xf3, 0x91, 0xc9, 0xd8, 0x18, 0x8c, 0x26, 0xb2, 0x0f, 0x61, 0x49, 0xb4,
	0xe3, 0xc3, 0x90, 0x9e, 0x11, 0x2b, 0xd4, 0x97, 0xdd, 0x7d, 0x1b, 0x11, 0x8c, 0xbb, 0xaf, 0x53,
	0xb9, 0x63, 0xf5, 0xcf, 0xb0, 0x1c, 0xaf, 0x2e, 0xfb, 0x75, 0x4b, 0xf9, 0xdf, 0x0a, 0x14, 0x2e,
	0x07, 0xff, 0xd7, 0x2e, 0xa2, 0x45, 0xc8, 0xf2, 0x89, 0x3c, 0xb2, 0x2d, 0x7e, 0xa7, 0x73, 0x38,
	0xc3, 0xd7, 0x4d, 0x4b, 0xff, 0x04, 0x0b, 0xc2, 0xc4, 0x3a, 0x71, 0x7b, 0xce, 0xa8, 0xef, 0x1f,
	0x19, 0xb6, 0x07, 0xac, 0x70, 0x53, 0x3a, 0xf8, 0x30, 0xe6, 0xc0, 0x89, 0xcc, 0x89, 0x04, 0xfd,
	0x00, 0xb4, 0xa8, 0x72, 0xd8, 0x9a, 0x5b, 0x49, 0xff, 0x52, 0x00, 0xc6, 0xa1, 0x7f, 0xdd, 0x96,
	0x15, 0xc8, 0x07, 0x4e, 0xfb, 0x06, 0xa7, 0x78, 0x1d, 0x10, 0x6c, 0x35, 0x2d, 0xf4, 0xf2, 0xd2,
	0xd7, 0xaa, 0x57, 0x5c, 0x9d, 0x09, 0xae, 0xf6, 0x33, 0x09, 0x99, 0xba, 0x38, 0x17, 0xed, 0x00,
	0x8c, 0x1f, 0x24, 0xf4, 0x20, 0x92, 0xdb, 0xf0, 0x7f, 0x49, 0x4b, 0x8f, 0x63, 0x2a, 0x8e, 0x79,
	0xc7, 0x36, 0xa1, 0xb0, 0x4d, 0xd8, 0xae, 0xc9, 0x88, 0x0c, 0xcd, 0x14, 0x9c, 0xf9, 0xc2, 0xa1,
	0x43, 0xc8, 0x4f, 0x3c, 0xb4, 0x28, 0xee, 0xe4, 0xe8, 0x73, 0x5e, 0x7a, 0x72, 0x1d, 0x26, 0x2b,
	0xbc, 0x80, 0xf9, 0xb8, 0x9b, 0x8d, 0x8c, 0x99, 0xf9, 0xb1, 0x0f, 0x4c, 0xa9, 0x7a, 0x63, 0x5e,
	0x1e, 0xfc, 0x05, 0x8a, 0xd3, 0x33, 0x8b, 0x9e, 0xce, 0x14, 0x89, 0x5c, 0x99, 0xd2, 0xb3, 0x1b,
	0xb1, 0xe2, 0xb0, 0xe3, 0x34, 0x77, 0xfb, 0xc5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x42, 0xbb,
	0x2f, 0xb6, 0x54, 0x09, 0x00, 0x00,
}
