syntax = "proto3";

package proto;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "plugin.proto";

// ReleaseManager is a serivce that handles the process of exposing
// a deployment to traffic.
service ReleaseManager {
  rpc IsAuthenticator(google.protobuf.Empty) returns (ImplementsResp);
  rpc Auth(FuncSpec.Args) returns (google.protobuf.Empty);
  rpc AuthSpec(google.protobuf.Empty) returns (FuncSpec);
  rpc ValidateAuth(FuncSpec.Args) returns (google.protobuf.Empty);
  rpc ValidateAuthSpec(google.protobuf.Empty) returns (FuncSpec);

  rpc ConfigStruct(google.protobuf.Empty) returns (Config.StructResp);
  rpc Configure(Config.ConfigureRequest) returns (google.protobuf.Empty);

  rpc ReleaseSpec(Empty) returns (FuncSpec);
  rpc Release(FuncSpec.Args) returns (Release.Resp);
}

message Release {
  string url = 1;

  message Resp {
    // result is the resulting data type for building.
    google.protobuf.Any result = 1;

    // release structure
    Release release = 2;
  }
}
